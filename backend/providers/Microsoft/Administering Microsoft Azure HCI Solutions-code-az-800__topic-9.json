[
  {
    "topic": 9,
    "index": 1,
    "url": "https://www.examtopics.com/discussions/microsoft/view/75005-exam-az-800-topic-9-question-1-discussion/",
    "body": "HOTSPOT -<br>You need to meet the technical requirements for Server4.<br>Which cmdlets should you run on Server1 and Server4? To answer, select the appropriate options in the answer area.<br>NOTE: Each correct selection is worth one point.<br>Hot Area:<br><img src=\"/assets/media/exam-media/04225/0005500006.png\" class=\"in-exam-image\"><br>",
    "options": [],
    "answer": "<img src=\"/assets/media/exam-media/04225/0005600001.png\" class=\"in-exam-image\">",
    "answerDescription": "Reference:<br>https://4sysops.com/wiki/enable-powershell-remoting/",
    "votes": [],
    "comments": [
      {
        "date": "2022-07-01T18:27:00.000Z",
        "voteCount": 14,
        "content": "Server1:Set-Item\nServer4:Enable-PsRemoting"
      },
      {
        "date": "2024-06-20T02:52:00.000Z",
        "voteCount": 1,
        "content": "I think this is the other way round. Surely you would use Set-Item on the Workgroup server to \"trust\" the Server1 that's going to manage it remotely? Otherwise you're setting Server4 to manage Server1 and that's not the requirement?\nThen Enable-PSRemoting on Server1 as you can use it for firewall related settings for remote connections. Technically you do this on both servers though, it's not a good question."
      },
      {
        "date": "2022-11-06T18:20:00.000Z",
        "voteCount": 5,
        "content": "Technically these are all missing answers- that don't address the whole situation. both sides need to use set-item and both sides need to be enabled for psremoting. this may be to conservative answer but in the real world i would do : \nServer 4\n\nEnable-psremoting\nSet-Item WSMan:\\localhost\\Client\\TrustedHosts -Value \"Ip of server1\" -Force\nServer 1\n\nEnable-psremoting\nSet-Item WSMan:\\localhost\\Client\\TrustedHosts -Value \"Ip of server4\" -Force\n\nIt doesnt matter what order you run any of these- you will read trusted host is not needed on the domain computer- except- its connected to a non-domain server- so its... needed."
      },
      {
        "date": "2023-11-13T10:37:00.000Z",
        "voteCount": 1,
        "content": "\"PowerShell remoting is enabled by default on Windows Server platforms.\"\nhttps://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/enable-psremoting?view=powershell-7.3\n\nSo it looks like all you need to do is to add trusted hosts on both sides?"
      },
      {
        "date": "2024-10-03T03:57:00.000Z",
        "voteCount": 1,
        "content": "The source computer needs to add the destination computer in \"TrustedHosts\" file: Set-Item WSMan:\\localhost\\Client\\TrustedHosts -Value \"SERVER4-IP\" -Concatenate -Force\nThe destination computer needs to allow remote connection: Enter-PSRemoting\n\nPS: Remoting Powershell is enabled by default in Windows Server (regardless of whether it is in the domain or not) but, in this kind of context, shows that the remote powershell needs to be enabled.\n\nSummary:\nServer1 - Set-Item\nServer4 - Enable-PSRemoting"
      },
      {
        "date": "2024-08-15T23:33:00.000Z",
        "voteCount": 2,
        "content": "if computer A (domain member) has to manage Computer B, and computer B is out of a domain, like Workgroup, Computer B has to be in private network and not public, the you run the command enable-psremoting -force; Computer A doesn't trust computer B, so you need to run Set-Item WSMan:\\localhost\\Client\\TrustedHosts -Value \"IP Computer B\" -Concatenate -Force. Enjoy!"
      },
      {
        "date": "2024-05-29T10:29:00.000Z",
        "voteCount": 1,
        "content": "Valid 05/28/2024"
      },
      {
        "date": "2024-01-10T06:18:00.000Z",
        "voteCount": 1,
        "content": "this is from Co-Pilot\nHere are the steps to enable PowerShell remoting on each server:\n\nOpen PowerShell with administrative privileges on each server.\nRun the following command: Enable-PSRemoting -Force.\nIf you are in a workgroup environment, add the IP address of the remote host to the trusted hosts list in the local machine 1.\n\nOn Server4, run the following command: Set-Item WSMan:\\localhost\\Client\\TrustedHosts -Value &lt;IP address of Server1&gt; -Concatenate."
      },
      {
        "date": "2023-11-13T10:35:00.000Z",
        "voteCount": 1,
        "content": "\"PowerShell remoting is enabled by default on Windows Server platforms. \"\nDon't need to enable it\nhttps://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/enable-psremoting?view=powershell-7.3"
      },
      {
        "date": "2023-09-22T21:21:00.000Z",
        "voteCount": 1,
        "content": "Provided answer seems correct."
      },
      {
        "date": "2023-04-01T00:20:00.000Z",
        "voteCount": 1,
        "content": "Start-Service is out of the question\n\nhttps://learn.microsoft.com/en-us/powershell/module/servermanager/enable-servermanagerstandarduserremoting?view=windowsserver2022-ps\n\nProvides one or more standard, non-Administrator users access to event, service, performance counter, and role and feature inventory data for a server that you are managing by using Server Manager\n\nAnswer is correct"
      },
      {
        "date": "2022-10-07T02:16:00.000Z",
        "voteCount": 3,
        "content": "https://4sysops.com/archives/enable-powershell-remoting-on-a-standalone-workgroup-computer/\n\nLocal (Workgroup) Server Set-Item\n\nRemote (Domain) Server Enable-PsRemoting"
      },
      {
        "date": "2022-05-19T00:54:00.000Z",
        "voteCount": 1,
        "content": "So answers should be\n*Enabke-PsRemoting\n*Set-Item"
      },
      {
        "date": "2022-07-12T10:13:00.000Z",
        "voteCount": 2,
        "content": "wrong way around. \nEnable-PsRemoting on the destination / remote server"
      },
      {
        "date": "2022-05-14T10:05:00.000Z",
        "voteCount": 3,
        "content": "Here's a highlighted answer from below link:\n\nhttps://4sysops.com/wiki/enable-powershell-remoting/#:~:text=On%20workgroup%20group%20computers%20%5E,Value%20%2210.0.2.33%22%20%2DForce"
      },
      {
        "date": "2022-05-13T15:50:00.000Z",
        "voteCount": 1,
        "content": "Trustedhost s-value"
      },
      {
        "date": "2022-04-30T17:42:00.000Z",
        "voteCount": 4,
        "content": "Set-Item as Server 4 is not in domain?\nhttps://4sysops.com/wiki/enable-powershell-remoting/"
      },
      {
        "date": "2022-05-11T05:05:00.000Z",
        "voteCount": 2,
        "content": "Agree:\n\nEnable-PSRemoting -Force -SkipNetworkProfileCheck\nAuthentication in PowerShell remoting relies on Active Directory. By default, only computers that are domain members can connect via PowerShell remoting. In a workgroup environment, you have to add the IP addresses of the computers to the TrustedHosts list manually:\n\nSet-Item WSMan:\\localhost\\Client\\TrustedHosts -Value \"10.0.2.33\" -Force"
      },
      {
        "date": "2022-06-05T09:22:00.000Z",
        "voteCount": 2,
        "content": "Wrong!\n-SkipNetworkProfileCheck = Indicates that this cmdlet enables remoting on client versions of the Windows operating system when the computer is on a public network. This parameter enables a firewall rule for public networks that allows remote access only from computers in the same local subnet.\n\nThis parameter does not affect server versions of the Windows operating system, which, by default, have a local subnet firewall rule for public networks. If the local subnet firewall rule is disabled on a server version, Enable-PSRemoting re-enables it, regardless of the value of this parameter."
      }
    ],
    "examNameCode": "az-800",
    "topicNumber": "9"
  }
]