[
  {
    "topic": 14,
    "index": 1,
    "url": "https://www.examtopics.com/discussions/microsoft/view/23350-exam-az-202-topic-14-question-1-discussion/",
    "body": "HOTSPOT -<br>You need to configure retries in the LoadUserDetails function in the Database class without impacting user experience.<br>What code, should you insert on line DB07?<br>To answer, select the appropriate options in the answer area.<br>NOTE: Each correct selection is worth one point.<br>Hot Area:<br><img src=\"/assets/media/exam-media/02522/0010300001.jpg\" class=\"in-exam-image\"><br>",
    "options": [],
    "answer": "<img src=\"/assets/media/exam-media/02522/0010400001.jpg\" class=\"in-exam-image\">",
    "answerDescription": "Box 1: Policy -<br><br>RetryPolicy retry = Policy -<br>.Handle&lt;HttpRequestException&gt;()<br>.Retry(3);<br>The above example will create a retry policy which will retry up to three times if an action fails with an exception handled by the Policy.<br>Box 2: WaitAndRetryAsync(3,i =&gt; TimeSpan.FromMilliseconds(100* Math.Pow(2,i-1)));<br>A common retry strategy is exponential backoff: this allows for retries to be made initially quickly, but then at progressively longer intervals, to avoid hitting a subsystem with repeated frequent calls if the subsystem may be struggling.<br>Example:<br><br>Policy -<br>.Handle&lt;SomeExceptionType&gt;()<br>.WaitAndRetry(3, retryAttempt =&gt;<br>TimeSpan.FromSeconds(Math.Pow(2, retryAttempt))<br>);<br>References:<br>https://github.com/App-vNext/Polly/wiki/Retry",
    "votes": [],
    "comments": [
      {
        "date": "2020-06-17T07:49:00.000Z",
        "voteCount": 1,
        "content": "Wrong answer selection, however explanation it is right, go to the explanation and check the correct answer for the second box:\nWaitAndRetryAsync(3,i =&gt; TimeSpan.FromMilliseconds(100* Math.Pow(2,i-1)));"
      }
    ],
    "examNameCode": "az-202",
    "topicNumber": "14"
  }
]