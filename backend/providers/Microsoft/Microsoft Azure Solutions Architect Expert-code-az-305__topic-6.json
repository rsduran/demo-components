[
  {
    "topic": 6,
    "index": 1,
    "url": "https://www.examtopics.com/discussions/microsoft/view/81661-exam-az-305-topic-6-question-1-discussion/",
    "body": "You need to recommend a solution for the App1 maintenance task. The solution must minimize costs.<br>What should you include in the recommendation?<br>",
    "options": [
      "<span class=\"multi-choice-letter\" data-choice-letter=\"A\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tA.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tan Azure logic app",
      "<span class=\"multi-choice-letter\" data-choice-letter=\"B\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tB.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tan Azure function\n\t\t\t\t\t\t\t\t\t\t<span class=\"badge badge-success most-voted-answer-badge\" title=\"\" style=\"display: none;\" data-original-title=\"This answer is currently the most voted for in the discussion\">\n                Most Voted\n            </span>",
      "<span class=\"multi-choice-letter\" data-choice-letter=\"C\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tC.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tan Azure virtual machine",
      "<span class=\"multi-choice-letter\" data-choice-letter=\"D\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tD.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tan App Service WebJob"
    ],
    "answer": "B",
    "answerDescription": "",
    "votes": [
      {
        "answer": "B",
        "count": 52,
        "isMostVoted": true
      },
      {
        "answer": "A",
        "count": 32,
        "isMostVoted": false
      }
    ],
    "comments": [
      {
        "date": "2022-12-28T04:31:00.000Z",
        "voteCount": 26,
        "content": "Azure function will need to be run from every region. This will need 2 functions. Logic app can be created centrally and executed for both regions as per given requirement. \"The PowerShell script will run from a central location.\""
      },
      {
        "date": "2023-01-03T19:26:00.000Z",
        "voteCount": 7,
        "content": "Azure function as a resource is created in a region but it can access data store from a different region if access is provided. A single function from a region should be able to do the job. I have no reason to believe that a logic app can access data store from two regions but a function cannot. Answer is B."
      },
      {
        "date": "2022-12-28T23:00:00.000Z",
        "voteCount": 2,
        "content": "You can create a Consumption logic app in multi-tenant Azure Logic Apps by using the JSON file for a logic app workflow definition. You can then manage your logic app by running the cmdlets in the Az.LogicApp PowerShell module.\nReference:\nhttps://docs.microsoft.com/en-us/azure/logic-apps/quickstart-logic-apps-azure-powershell"
      },
      {
        "date": "2022-12-28T22:59:00.000Z",
        "voteCount": 4,
        "content": "\"Azure Functions resources are region-specific and can't be moved across regions. You must create a copy of your existing function app resources in the target region, then redeploy your functions code over to the new app.\"\n\nhttps://learn.microsoft.com/en-us/azure/azure-functions/functions-move-across-regions"
      },
      {
        "date": "2023-04-29T12:21:00.000Z",
        "voteCount": 22,
        "content": "I am confident it's B. Azure Function. I had this question on the exam today, and I got 979, in the Design Infrastrcture Solutions, I was 100% correct, and this quesiton belongs to this catagory."
      },
      {
        "date": "2024-09-20T06:50:00.000Z",
        "voteCount": 1,
        "content": "The question mentions \"minimize cost\"\n\nWhile Logic Apps can also schedule and execute tasks, they are generally more suited for orchestrating complex workflows. \nFor this simple task, an Azure Function is more cost-effective."
      },
      {
        "date": "2024-09-14T06:26:00.000Z",
        "voteCount": 1,
        "content": "you can run PowerShell scripts using Azure Logic Apps, although it requires integration with other Azure services because Logic Apps itself does not execute PowerShell scripts directly. One common approach is to use Azure Automation within your Logic App workflow, hence azure function is ideal choice, with less efforts"
      },
      {
        "date": "2024-08-04T02:59:00.000Z",
        "voteCount": 3,
        "content": "I thought it should be Azure function ( go with `B`)\n\nBecause this requirement of maintenance task was not need any workflow logic to complete the task. They just need to execute the PowerShell script for copies the file that made by App1. That reason we could be simplify process with create the Azure function for completely objective. So, Azure function can access data in any storage account that we want by allow access policy."
      },
      {
        "date": "2024-06-26T10:49:00.000Z",
        "voteCount": 2,
        "content": "zure Functions are ideal for running scheduled tasks, such as hourly PowerShell scripts, without the overhead of maintaining a virtual machine. They offer a serverless compute service that allows you to execute code on-demand without having to provision and manage infrastructure, thereby minimizing cost"
      },
      {
        "date": "2024-05-03T14:13:00.000Z",
        "voteCount": 1,
        "content": "The correct answer is B. an Azure Function.\n\nAzure Functions is a serverless compute service that lets you run event-triggered code without having to explicitly provision or manage infrastructure. In this case, you can create a timer-triggered function that runs your PowerShell script every hour. This approach is cost-effective because with Azure Functions, you only pay for the time your code runs.\n\nOption A, Azure Logic App, is more suited for workflows and would be an overkill for this scenario. Option C, an Azure Virtual Machine, would require you to manage the infrastructure and would be more costly. Option D, an App Service WebJob, could also work but it would require an App Service plan which might be more expensive than Azure Functions. Therefore, Azure Functions would be the most cost-effective solution for this scenario."
      },
      {
        "date": "2024-04-26T10:16:00.000Z",
        "voteCount": 1,
        "content": "I would agree with B and below show why\nhttps://learn.microsoft.com/en-us/azure/azure-functions/functions-compare-logic-apps-ms-flow-webjobs"
      },
      {
        "date": "2024-04-12T18:24:00.000Z",
        "voteCount": 2,
        "content": "Azure Logic Apps does not have a native connector to directly run PowerShell scripts within its workflows"
      },
      {
        "date": "2024-03-21T22:34:00.000Z",
        "voteCount": 1,
        "content": "Final Answer:\nan Azure logic app"
      },
      {
        "date": "2024-02-28T08:55:00.000Z",
        "voteCount": 2,
        "content": "B. an Azure function"
      },
      {
        "date": "2024-02-27T22:23:00.000Z",
        "voteCount": 3,
        "content": "PowerShell script and every hour, this is Azure Function for sure."
      },
      {
        "date": "2023-12-11T19:16:00.000Z",
        "voteCount": 1,
        "content": "\"Every hour, you will run a maintenance task by invoking a PowerShell script that copies files from all the App1 instances. \" --&gt; This shows that require coding for copying is taken care of by PowerShell script and now it just need to be scheduled and executed. Logic App does not need coding Azure Functions need coding. So ruling out Azure Functions. Answer is Logic App."
      },
      {
        "date": "2024-03-05T04:18:00.000Z",
        "voteCount": 1,
        "content": "Bro you need to run a PS script, which can be the code of the function"
      },
      {
        "date": "2023-12-11T09:04:00.000Z",
        "voteCount": 1,
        "content": "Azure Logic App. The key here is the term \"every hour\"\n\"Every hour, you will run a maintenance task by invoking a PowerShell script that copies files from all the App1 instances. The PowerShell script will run from a central location.\"\n\nIn Azure Logic App, you can schedule every hour."
      },
      {
        "date": "2024-02-26T22:25:00.000Z",
        "voteCount": 2,
        "content": "Wrong.  The thing you call \"key\" should be \"minimize costs\". As for \"every hour\" all those options can be timed to execute hourly."
      },
      {
        "date": "2024-01-13T03:25:00.000Z",
        "voteCount": 2,
        "content": "timer-triggered azure function: exists"
      },
      {
        "date": "2023-11-30T19:02:00.000Z",
        "voteCount": 4,
        "content": "For the App1 maintenance task, I would recommend using an **Azure Function** (Option B). Azure Functions is a serverless compute service that lets you run event-triggered code without having to explicitly provision or manage infrastructure. Given that the maintenance task needs to run every hour, this can be easily configured with a timer trigger in Azure Functions. This approach would minimize costs as you only pay for the compute time you consume - there is no charge when your code is not running. Plus, with Azure Functions, you can write your function code in PowerShell, which aligns with your requirement to run a PowerShell script."
      },
      {
        "date": "2023-09-14T01:18:00.000Z",
        "voteCount": 2,
        "content": "Both Azure function and Logic App may solve the problem but in terms of cost, Logic App is more efficient.\nAzure Functions need to have VNet integration to connect to every resource. As it is in different regions, they need Dedicated plan with a VNet Gateway (with its charges). See the matrix in https://learn.microsoft.com/en-us/azure/azure-functions/functions-networking-options?tabs=azure-cli#virtual-network-integration"
      },
      {
        "date": "2023-09-13T04:48:00.000Z",
        "voteCount": 1,
        "content": "I'd say Logic App because we don't know how much time the powershell script is going to take (with the risk of being over the 10 minutes allowed from the consumption plan); and something should still trigger the azure function periodically, so it would require another component"
      },
      {
        "date": "2024-03-05T04:20:00.000Z",
        "voteCount": 1,
        "content": "The function code can be the script itlelf, so you don't need to code 2 components"
      }
    ],
    "examNameCode": "az-305",
    "topicNumber": "6"
  },
  {
    "topic": 6,
    "index": 2,
    "url": "https://www.examtopics.com/discussions/microsoft/view/81904-exam-az-305-topic-6-question-2-discussion/",
    "body": "You need to recommend a solution that meets the application development requirements.<br>What should you include in the recommendation?<br>",
    "options": [
      "<span class=\"multi-choice-letter\" data-choice-letter=\"A\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tA.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tthe Azure App Configuration service",
      "<span class=\"multi-choice-letter\" data-choice-letter=\"B\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tB.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tan Azure Container Registry instance",
      "<span class=\"multi-choice-letter\" data-choice-letter=\"C\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tC.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tdeployment slots\n\t\t\t\t\t\t\t\t\t\t<span class=\"badge badge-success most-voted-answer-badge\" title=\"\" style=\"display: none;\" data-original-title=\"This answer is currently the most voted for in the discussion\">\n                Most Voted\n            </span>",
      "<span class=\"multi-choice-letter\" data-choice-letter=\"D\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tD.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tContinuous Integration/Continuous Deployment (CI/CD) sources"
    ],
    "answer": "C",
    "answerDescription": "",
    "votes": [
      {
        "answer": "C",
        "count": 21,
        "isMostVoted": true
      }
    ],
    "comments": [
      {
        "date": "2022-09-19T09:30:00.000Z",
        "voteCount": 7,
        "content": "Should be C - Deployment Slots\n\nhttps://learn.microsoft.com/en-us/azure/app-service/deploy-staging-slots"
      },
      {
        "date": "2023-02-25T09:46:00.000Z",
        "voteCount": 6,
        "content": "C is the answer.\n\nhttps://learn.microsoft.com/en-us/azure/app-service/deploy-best-practices#use-deployment-slots\nWhenever possible, use deployment slots when deploying a new production build. When using a Standard App Service Plan tier or better, you can deploy your app to a staging environment, validate your changes, and do smoke tests. When you are ready, you can swap your staging and production slots. The swap operation warms up the necessary worker instances to match your production scale, thus eliminating downtime."
      },
      {
        "date": "2024-07-25T03:05:00.000Z",
        "voteCount": 1,
        "content": "Correct. Deployment slots is the best option."
      },
      {
        "date": "2024-06-28T11:16:00.000Z",
        "voteCount": 1,
        "content": "The question was not at all clear. It did not require any requirement of separate Environments for deploying applications within Azure App Service. Bad question."
      },
      {
        "date": "2024-04-26T10:29:00.000Z",
        "voteCount": 1,
        "content": "Given Answer C  is correct"
      },
      {
        "date": "2023-07-01T06:49:00.000Z",
        "voteCount": 1,
        "content": "https://docs.microsoft.com/en-us/azure/app-service/deploy-staging-slots"
      },
      {
        "date": "2023-02-04T23:40:00.000Z",
        "voteCount": 1,
        "content": "C. deployment slot"
      },
      {
        "date": "2022-11-03T12:55:00.000Z",
        "voteCount": 3,
        "content": "Correct Answer C-Deployments Slots"
      },
      {
        "date": "2022-10-15T06:59:00.000Z",
        "voteCount": 4,
        "content": "Its wants deployment slots as the answer, but CI/CD would be the better way of doing it."
      },
      {
        "date": "2022-10-11T23:54:00.000Z",
        "voteCount": 5,
        "content": "appeared on 11th Oct 2022"
      },
      {
        "date": "2022-09-14T16:44:00.000Z",
        "voteCount": 3,
        "content": "For me CI/CD could be the best option. you can test it when it's in an env."
      },
      {
        "date": "2022-09-13T03:12:00.000Z",
        "voteCount": 1,
        "content": "It should be A. the Azure App Configuration service"
      },
      {
        "date": "2022-09-12T19:05:00.000Z",
        "voteCount": 4,
        "content": "Answer is C - Deployment Slots\n\nWe are dealing with testing then deploying versions of Apps.\n\nAs per the Case Study:\n\nApplication Development Requirements:\nApplication developers will constantly develop new versions of App1 and App2. The development process must meet the following requirements:\nA staging instance of a new application version must be deployed to the application host before the new version is used in production.\nAfter testing the new version, the staging version of the application will replace the production version."
      }
    ],
    "examNameCode": "az-305",
    "topicNumber": "6"
  },
  {
    "topic": 6,
    "index": 3,
    "url": "https://www.examtopics.com/discussions/microsoft/view/81907-exam-az-305-topic-6-question-3-discussion/",
    "body": "You need to recommend an App Service architecture that meets the requirements for App1. The solution must minimize costs.<br>What should you recommend?<br>",
    "options": [
      "<span class=\"multi-choice-letter\" data-choice-letter=\"A\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tA.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tone App Service Environment (ASE) per availability zone",
      "<span class=\"multi-choice-letter\" data-choice-letter=\"B\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tB.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tone App Service Environment (ASE) per region",
      "<span class=\"multi-choice-letter\" data-choice-letter=\"C\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tC.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tone App Service plan per region\n\t\t\t\t\t\t\t\t\t\t<span class=\"badge badge-success most-voted-answer-badge\" title=\"\" style=\"display: none;\" data-original-title=\"This answer is currently the most voted for in the discussion\">\n                Most Voted\n            </span>",
      "<span class=\"multi-choice-letter\" data-choice-letter=\"D\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tD.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tone App Service plan per availability zone"
    ],
    "answer": "C",
    "answerDescription": "",
    "votes": [
      {
        "answer": "C",
        "count": 85,
        "isMostVoted": true
      },
      {
        "answer": "B",
        "count": 13,
        "isMostVoted": false
      }
    ],
    "comments": [
      {
        "date": "2022-09-26T12:28:00.000Z",
        "voteCount": 39,
        "content": "No need for dedicated environment. So Azure Service Plan per region is enough."
      },
      {
        "date": "2023-07-05T09:41:00.000Z",
        "voteCount": 15,
        "content": "C. one App Service plan per region\n\nAn App Service Environment (ASE, option B) is a premium Azure App Service hosting offering that provides fully isolated and dedicated environments for securely running App Service apps at high scale. While it does meet the requirements for App1, it's a costly option compared to the App Service plan (option C).\n\nOn the other hand, an App Service plan (option C) represents a set of compute resources that you allocate to host your apps. You can host multiple apps in the same App Service plan, sharing the resources and thereby reducing costs.\n\nFor App1, which is planned to have three instances in each of two regions, it would be more cost-effective to use a single App Service plan per region. This would allow the multiple App1 instances in each region to share the resources of the single App Service plan."
      },
      {
        "date": "2024-09-25T23:07:00.000Z",
        "voteCount": 1,
        "content": "I would agree with \"C\". However the requirment states:\nApp1 has the following data requirements:\nEach instance will write data to a data store in the same availability zone as the instance.\nSo I tend to go to \"D\" now."
      },
      {
        "date": "2024-06-26T10:54:00.000Z",
        "voteCount": 1,
        "content": "This approach provides the necessary resources for App1 while leveraging regional deployments for high availability and cost efficiency. By using a single App Service plan per region (East US and West Europe), you can host multiple instances of App1 within each region, benefiting from shared resources and reduced costs compared to having multiple App Service Environments (ASEs) or plans per availability zone. Additionally, App Service plans support Linux runtimes and can be integrated with Azure Key Vault for credential management. For load balancing and WAF, you can use Azure Front Door."
      },
      {
        "date": "2024-05-03T14:21:00.000Z",
        "voteCount": 1,
        "content": "C. One App Service plan per region.\n\nAn App Service plan represents the collection of physical resources used to host your apps. All apps associated with a plan run on the same VM instances. By having one App Service plan per region, you can ensure that each instance of App1 runs in the same availability zone as its data store, as required.\n\nOption A and B involving App Service Environment (ASE) would provide network isolation and improved scaling capabilities, but it comes with a significantly higher cost, which might not be necessary given the requirements of App1.\n\nOption D, one App Service plan per availability zone, could lead to unnecessary complexity and potential increased costs, as each App Service plan is billed separately.\n\nTherefore, option C is the most cost-effective solution that meets the requirements for App1. It allows for the necessary distribution of App1 instances across regions, while keeping the associated costs to a minimum."
      },
      {
        "date": "2024-04-26T11:07:00.000Z",
        "voteCount": 1,
        "content": "I would agree with C due to cost as both B and C can meet the requirements"
      },
      {
        "date": "2023-12-14T04:36:00.000Z",
        "voteCount": 2,
        "content": "One App service plan per region should be enough if Contoso has only one application App1 or Contoso does not want isolation of App1 and App2 traffic with each other. Ideally both should be isolated and hence two virtual networks per region - each for one app. So App1 having its own virtual network in this ideal scenario, One ASE per region is better option than one app service plan per region."
      },
      {
        "date": "2023-12-11T09:18:00.000Z",
        "voteCount": 1,
        "content": "C. One App Service Plan per region. To be exact, the Basic App Service Plan offers up to 3 dedicated instances for your app to run.\nhttps://learn.microsoft.com/en-us/azure/azure-resource-manager/management/azure-subscription-service-limits#app-service-limits"
      },
      {
        "date": "2023-09-14T00:57:00.000Z",
        "voteCount": 2,
        "content": "In my opinion for two reasons:\n- With Premium App Service App is enough in terms of zone redundant. It is offered in P2 and P3.\n- Comparing prices with ASE that is Isolated. ASE in zone redundant is charged with nine instances as minimum regardless of using 3 instances. So it is much expensive. See this link in pricing section (Zone redundant App Service Environment v3): https://learn.microsoft.com/en-us/azure/app-service/environment/overview?source=recommendations"
      },
      {
        "date": "2023-09-08T12:35:00.000Z",
        "voteCount": 2,
        "content": "Azure Service Plan per region is enough."
      },
      {
        "date": "2023-08-16T12:55:00.000Z",
        "voteCount": 1,
        "content": "what about this requirement:\nConnections to App1 must be active-active load balanced between instances.\ncan App Service Plan handle that or we would need ASE to handle this requirement? I am leaning towards Answer B"
      },
      {
        "date": "2023-08-16T04:54:00.000Z",
        "voteCount": 1,
        "content": "C - minimize cost, both C and B technically work, but B is more expensive"
      },
      {
        "date": "2023-06-27T07:01:00.000Z",
        "voteCount": 1,
        "content": "So if the answer is \"App Service Plan per region\" and there should be 6 instances and there are 2 regions, Can anybody tell me what is the reason to have 3 instances of the same Web App sitting on the same App Service Plan?"
      },
      {
        "date": "2023-06-28T05:01:00.000Z",
        "voteCount": 2,
        "content": "I have found the answer to my question. Some App Service Plans can be zone redundant. So I suppose the correct answer is C \"Azure Service Plan per region\""
      },
      {
        "date": "2023-04-20T02:09:00.000Z",
        "voteCount": 1,
        "content": "In\nhttps://learn.microsoft.com/en-us/azure/app-service/overview-hosting-plans#should-i-put-an-app-in-a-new-plan-or-an-existing-plan \nIsolate your app into a new App Service plan when:\n....\n- The app needs resource in a different geographical region.\n\nIn\nhttps://learn.microsoft.com/en-us/azure/app-service/manage-move-across-regions\nApp Service resources are region-specific and can't be moved across regions.\n\nAs per case study, data for one instance of App1 must be available to all instances of App1\n\nSo I would say B even if it's more expensive"
      },
      {
        "date": "2023-04-10T09:28:00.000Z",
        "voteCount": 2,
        "content": "I did think C initially, but am angling towards B now (not withstanding the cost requirement) The only additional thing that I would say should be considered should be the need for the data to be available to App1 across all regions and instances. App service plans are region specific. At https://learn.microsoft.com/en-us/azure/app-service/environment/overview#virtual-network-support its stated \"If the App Service Environment virtual network is connected to another network, the apps in the App Service Environment can access resources in those extended networks.\" Does this not imply that the app can therefore access all data across all six instances? Not sure that having a separate app service plan in each region would allow that portion of the requirement stated"
      },
      {
        "date": "2023-03-21T17:18:00.000Z",
        "voteCount": 1,
        "content": "ASE is too much. ASP will do ."
      },
      {
        "date": "2023-02-26T11:58:00.000Z",
        "voteCount": 8,
        "content": "This was a question was on my exam today (2/26/23) - Scored 844\nI selected C, ASE seems like more than requested, if trying to keep it simple"
      }
    ],
    "examNameCode": "az-305",
    "topicNumber": "6"
  },
  {
    "topic": 6,
    "index": 4,
    "url": "https://www.examtopics.com/discussions/microsoft/view/81606-exam-az-305-topic-6-question-4-discussion/",
    "body": "HOTSPOT -<br>You need to recommend a solution to ensure that App1 can access the third-party credentials and access strings. The solution must meet the security requirements.<br>What should you include in the recommendation? To answer, select the appropriate options in the answer area.<br>NOTE: Each correct selection is worth one point.<br>Hot Area:<br><img src=\"/assets/media/exam-media/04224/0016000001.png\" class=\"in-exam-image\"><br>",
    "options": [],
    "answer": "<img src=\"/assets/media/exam-media/04224/0016000002.png\" class=\"in-exam-image\">",
    "answerDescription": "Scenario: Security Requirement -<br>All secrets used by Azure services must be stored in Azure Key Vault.<br>Services that require credentials must have the credentials tied to the service instance. The credentials must NOT be shared between services.<br>Box 1: A system-assigned managed identity<br>No one knows the credentials of managed identities.<br>Managed Identities exist in two formats:<br>* System assigned: in this scenario, the identity is linked to a single Azure Resource, eg a Virtual Machine, a Logic App, a Storage Account, Web App, Function,\u05d2\u20ac\u00a6 so almost anything. Next, they also \u05d2\u20aclive\u05d2\u20ac with the Azure Resource, which means they get deleted when the Azure Resource gets deleted.<br>* User Assigned Managed Identity (incorrect for this question), which means that you first have to create it as a stand-alone Azure resource by itself, after which it can be linked to multiple Azure Resources.<br><br>Box 2: An access policy -<br>Set up an access policy for the system-assigned managed identity.<br><br>Note: Grant access -<br>The managed identity needs to be granted access to read the secret that we'll store in the Key Vault.<br>1. Navigate to your newly created Key Vault<br>2. Select Access Policy from the menu on the left side.<br>3. Select Add Access Policy<br>4. Etc.<br>Reference:<br>https://devblogs.microsoft.com/devops/demystifying-service-principals-managed-identities/ https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/tutorial-windows-vm-access-nonaad",
    "votes": [],
    "comments": [
      {
        "date": "2022-09-12T20:30:00.000Z",
        "voteCount": 41,
        "content": "Drop Down 1:\nA system-assigned managed identity.\n\nDrop Down 2:\nRole Assignment.\n\nBut I'm happy to be corrected. Thanks."
      },
      {
        "date": "2022-09-25T17:08:00.000Z",
        "voteCount": 4,
        "content": "Question 2: Both access policy and role assignment should work here"
      },
      {
        "date": "2022-10-02T20:51:00.000Z",
        "voteCount": 19,
        "content": "I figured out why only \"role assignment\" is the correct answer.\n\"Services that require credentials must have the credentials tied to the service instance. The credentials must NOT be shared between services\"\nRBAC can assign permission to a specific secret, but the access policy assigns permissions for all secrets or keys, not as granular as RBAC"
      },
      {
        "date": "2023-01-12T13:26:00.000Z",
        "voteCount": 3,
        "content": "I created a key and a secret in a key vault and can confirm that you cannot do role assignment on a particular key or secret."
      },
      {
        "date": "2023-01-25T03:33:00.000Z",
        "voteCount": 1,
        "content": "You need to select RBAC permission model first, then you can assign granular permissions to individual items."
      },
      {
        "date": "2023-01-12T13:16:00.000Z",
        "voteCount": 1,
        "content": "What do you mean RBAC can assign permission to a specific secret? How? For the controls at key/secret level, Access Policy is more granular than RBAC."
      },
      {
        "date": "2022-10-13T05:02:00.000Z",
        "voteCount": 22,
        "content": "1. user assigned managed identity - share 1 identity among all 6 app services\n2. access policy"
      },
      {
        "date": "2022-11-03T14:10:00.000Z",
        "voteCount": 8,
        "content": "It specifies that \"credentials must NOT be shared.\""
      },
      {
        "date": "2023-02-19T07:14:00.000Z",
        "voteCount": 5,
        "content": "They must not be shared... between APP1 and APP2.  But it says nothing about sharing between instances of the app. If we want to reduce admin overhead then this is actually better while still adhering to requirements,"
      },
      {
        "date": "2023-08-16T07:27:00.000Z",
        "voteCount": 7,
        "content": "Services that require credentials must have the credentials tied to the service instance. The credentials must NOT be shared between services.\n\nCredentials tied to the service instance. System assigned."
      },
      {
        "date": "2024-09-20T07:21:00.000Z",
        "voteCount": 1,
        "content": "Answer\n1: System-assigned MI\n2: Access Policy\n\nWhy not the other?\nUser-assigned managed identity: While user-assigned identities can be used across multiple resources, this option is not selected as it would contradict the requirement that credentials should not be shared between services.\n\nRole assignment: While this is used for access control in Azure resources, role-based access control (RBAC) in Key Vault is more commonly used for higher-level management tasks, whereas access policies are typically used to control access to secrets."
      },
      {
        "date": "2024-09-13T06:35:00.000Z",
        "voteCount": 1,
        "content": "system-assigned managed identity\nrole assignment"
      },
      {
        "date": "2024-04-13T00:35:00.000Z",
        "voteCount": 1,
        "content": "If you need separate managed identities for each instance, you would have to use user-assigned managed identities instead of system-assigned. User-assigned identities are created as separate Azure resources that can then be assigned individually to each App Service instance as needed. A MI would the same across instances. The \"not sharing\" between services is about separating Key Vaults or not using the same UI between the two apps."
      },
      {
        "date": "2024-03-15T14:18:00.000Z",
        "voteCount": 1,
        "content": "When i create a key vault i get to choose either RBAC or Access Policy. i think both are correct but which of them satisfy the security requirements? \n\n\"Security Requirement -\n- All secrets used by Azure services must be stored in Azure Key Vault.\n- Services that require credentials must have the credentials tied to the service instance. The credentials must NOT be shared between services.\"\nBox1:\n\"Services that require credentials must have the credentials tied to the service instance. The credentials must NOT be shared between services.\" &gt; system-assigned-managed identity\n\nBox2: we can use either of RBAC or Access Policy. couldn't find a clue which one to choose of them."
      },
      {
        "date": "2024-03-15T14:31:00.000Z",
        "voteCount": 1,
        "content": "in this RBAC article: https://learn.microsoft.com/en-us/azure/key-vault/general/rbac-guide\n\n\nAlso in the access policy article: https://learn.microsoft.com/en-us/azure/key-vault/general/assign-access-policy?WT.mc_id=Portal-Microsoft_Azure_KeyVault&amp;tabs=azure-portal#:~:text=you%27re%20using%20a-,managed%20identity,-for%20the%20app\n\n\nanyone can give me an insight on which one better would be great :D"
      },
      {
        "date": "2023-12-11T19:48:00.000Z",
        "voteCount": 1,
        "content": "With given answers how following condition can be met?\n\nApp1 will be a Python web app hosted in Azure App Service that requires a Linux runtime. Users from Contoso and Fabrikam will access App1."
      },
      {
        "date": "2023-11-30T19:21:00.000Z",
        "voteCount": 3,
        "content": "To ensure that App1 can access the third-party credentials and access strings securely, you should:\n\n**Authenticate App1 by using**: A system-assigned managed identity (Option B). A system-assigned managed identity is tied to your App Service and is automatically cleaned up when the service is deleted.\n\n**Authorize App1 to retrieve Key Vault secrets by using**: An access policy (Option A). You can configure Azure Key Vault to allow your App Service to retrieve secrets using its system-assigned managed identity. This is done by adding an access policy in Key Vault that grants the necessary permissions (like Get and List) to the managed identity."
      },
      {
        "date": "2023-11-30T18:24:00.000Z",
        "voteCount": 1,
        "content": "I recommend the following solution:\n\nSystem-assigned managed identity - This will allow app1 to use the Azure ad identity of the app service instance to access other Azure resources such as Key Vault.\n\nThen to authorize App1 to retrieve key vault secrets, use access policy. This will grant App1 the necessary permissions to read the secrets from the Key Vault.\nSee this: https://docs.microsoft.com/en-us/azure/app-service/overview-managed-identity\nhttps://docs.microsoft.com/en-us/azure/key-vault/general/assign-access-policy-portal"
      },
      {
        "date": "2023-11-29T22:34:00.000Z",
        "voteCount": 2,
        "content": "If you use ChatGPT 4 now the answer became the following.\n A system-assigned managed identity: This is an identity created by Azure for the App Service instance, which is tied to the lifecycle of this service and does not require the management of credentials.\nA role assignment: Utilizing Azure role-based access control (RBAC), you can assign a specific role to the managed identity, like \u201cKey Vault Secrets User\u201d, to retrieve secrets from the Key Vault.\n\nChat GPT 4 has now been updated to 2023 and its answer changed compared to a few months ago."
      },
      {
        "date": "2023-10-17T23:47:00.000Z",
        "voteCount": 1,
        "content": "Option 2 is role assignment is more granular. Here is how:\nhttps://learn-attachment.microsoft.com/api/attachments/193976-image.png?platform=QnA"
      },
      {
        "date": "2023-08-16T07:26:00.000Z",
        "voteCount": 1,
        "content": "Drop down 1: system-assigned MI. Literally states services cannot share the same identity. \n\nDrop down 2: Role assignment. More granular than access policy."
      },
      {
        "date": "2023-08-13T14:19:00.000Z",
        "voteCount": 1,
        "content": "I think DD1 should be \"A user-assigned managed identity\". Here's why:\n\nRequirements state: \"App1 will have six instances: three in the East US Azure region and three in the West Europe Azure region.\" This means we have two App Services (one per region), each with its own system identity.\n\nUsing user-managed identity, we can have a single MI to control the access.\n\nDD2 should be: Role Assignment (as pointed out in other posts, it provides more granular access)"
      },
      {
        "date": "2023-07-05T09:48:00.000Z",
        "voteCount": 6,
        "content": "Answer:\n\n1. Authenticate App1 by using: \n   - B. A system-assigned managed identity\n\n2. Authorize App1 to retrieve Key Vault secrets by using: \n   - A. An access policy\n\nExplanation:\n\nSystem-assigned managed identities are automatically managed by Azure, providing an identity for the Azure resource in Azure AD. This makes it an ideal choice for authenticating App1. \n\nThe Key Vault Access Policy determines what permissions the identities have, like get, list, set, and delete rights for secrets, which is necessary for App1 to retrieve the secrets stored in the Key Vault, hence the selection of an Access Policy for authorization."
      },
      {
        "date": "2023-07-04T04:10:00.000Z",
        "voteCount": 2,
        "content": "It's said here (https://learn.microsoft.com/en-us/azure/key-vault/general/rbac-access-policy)  that  access policies  is the \"legacy\" mode to access key vault. It's not said that one is more granular than other one. https://learn.microsoft.com/en-us/azure/key-vault/general/rbac-access-policy  So for me that will be :\nDrop Down 1: System-Assigned Managed Identity.\nDrop Down 2: Role Assignment."
      },
      {
        "date": "2023-07-04T04:16:00.000Z",
        "voteCount": 1,
        "content": "Sorry It's said too that Azure RBAC is built on Azure Resource Manager and provides FINE-GRAINED access management of Azure resources. And the scope can be an individual resource and the access policiy is limited to key vault scope."
      },
      {
        "date": "2023-06-20T08:39:00.000Z",
        "voteCount": 5,
        "content": "System Assigned Managed Identity + Role Assignment.\nJust create the KeyVault and then go to settings -&gt; access configuration. You will see that the RBAC is turned on by default and it is recommended. The Access Policy is turned off."
      },
      {
        "date": "2023-05-27T06:40:00.000Z",
        "voteCount": 2,
        "content": "For the second dropdown question, chatgpt-3 says: \n\nFor retrieving secrets from Azure Key Vault in your specific scenario, the recommended approach would be to use an access policy.\n\nAccess policies within Azure Key Vault are specifically designed to control and manage permissions for accessing secrets stored within the Key Vault. By adding an access policy for your App1 application, you can define the specific actions (such as \"get\" or \"list\") that the application can perform on the secrets stored in the Key Vault.\n\nRole assignments, on the other hand, are used to grant broader access to Azure resources at a higher scope, such as a subscription or resource group. While role assignments can provide access to the Key Vault itself, they do not offer the same granular control over secret operations as access policies do.\n\nTherefore, in the context of retrieving secrets from Azure Key Vault for your App1 application, the primary mechanism to use would be an access policy within the Key Vault. This allows you to grant the necessary permissions to your application to retrieve the secrets securely."
      }
    ],
    "examNameCode": "az-305",
    "topicNumber": "6"
  }
]