[
  {
    "topic": 1,
    "index": 1,
    "url": "https://www.examtopics.com/discussions/adobe/view/140308-exam-ad0-e722-topic-1-question-3-discussion/",
    "body": "A third-party company needs to create an application that will integrate the Adobe Commerce system to get orders data for reporting. The integration needs access to the GET /V1/orders endpoint. It will call this endpoint automatically every hour around the clock. The merchant wants the ability to restrict or extend access to resources as well as to revoke the access using Admin Panel.<br>Which type of authentication available in Adobe Commerce should be used and implemented in a third-party system for this integration?",
    "options": [
      "<span class=\"multi-choice-letter\" data-choice-letter=\"A\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tA.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tUse token-based authentication to obtain the Admin Token. The third-party system will utilize the REST endpoint using the admin username and password to get the Admin Token, which will be used as the Bearer Token to authorize.",
      "<span class=\"multi-choice-letter\" data-choice-letter=\"B\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tB.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tUse token-based authentication to obtain an Integration Token. Integration will be created and activated in the admin panel using default integration token settings to get access to the token, which will be used as the Bearer Token to authorize.",
      "<span class=\"multi-choice-letter\" data-choice-letter=\"C\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tC.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tUse OAuth-based authentication to provide access to system resources. Integration will be registered by the merchant in the admin panel with an OAuth handshake during activation. The third-party system should follow OAuth protocol to authorize."
    ],
    "answer": "B",
    "answerDescription": "",
    "votes": [],
    "comments": [
      {
        "date": "2024-05-10T18:57:00.000Z",
        "voteCount": 1,
        "content": "Answer Should be C"
      }
    ],
    "examNameCode": "ad0-e722",
    "topicNumber": "1"
  },
  {
    "topic": 1,
    "index": 2,
    "url": "https://www.examtopics.com/discussions/adobe/view/139941-exam-ad0-e722-topic-1-question-4-discussion/",
    "body": "In a custom module, an Architect wants to define a new xml configuration file. The module should be able to read all the xml configuration files declared in the system, merge them together, and use their values in PHP class.<br>Which two steps should the Architect make to meet this requirement? (Choose two.)",
    "options": [
      "<span class=\"multi-choice-letter\" data-choice-letter=\"A\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tA.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tInject a \u201creader\u201d dependency for \u201cMagento\\Framework\\Config\\Data\u201d in di.xml",
      "<span class=\"multi-choice-letter\" data-choice-letter=\"B\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tB.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tWrite a plugin for \\Magento\\Framework\\Config\\Data::get() and read the custom xml files",
      "<span class=\"multi-choice-letter\" data-choice-letter=\"C\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tC.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tCreate a Data class that implements \u201c\\Magento\\Framework\\Config\\Data\u201d",
      "<span class=\"multi-choice-letter\" data-choice-letter=\"D\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tD.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tAppend the custom xml file name in \u201cMagento\\Config\\Model\\Config\\Structure\\Reader\u201d in di.xml",
      "<span class=\"multi-choice-letter\" data-choice-letter=\"E\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tE.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tMake a Reader class that implements \u201c\\Magento\\Framework\\Config\\Reader\\Filesystem\u201d"
    ],
    "answer": "CE",
    "answerDescription": "",
    "votes": [],
    "comments": [
      {
        "date": "2024-05-02T19:53:00.000Z",
        "voteCount": 1,
        "content": "A and D are correct answers"
      }
    ],
    "examNameCode": "ad0-e722",
    "topicNumber": "1"
  },
  {
    "topic": 1,
    "index": 3,
    "url": "https://www.examtopics.com/discussions/adobe/view/141443-exam-ad0-e722-topic-1-question-26-discussion/",
    "body": "While reviewing a newly developed pull request that refactors multiple custom payment methods, the Architect notices multiple classes that depend on \\Magento\\Framework\\Encryption\\EncryptorInterface to decrypt credentials for sensitive data. The code that is commonly repeated is as follows:<br><img title=\"image11\" src=\"https://img.examtopics.com/ad0-e722/image11.png\"><br>In each module, the user_secret config is declared as follows:<br><img title=\"image12\" src=\"https://img.examtopics.com/ad0-e722/image12.png\"><br>The Architect needs to recommend an optimal solution to avoid redundant dependency and duplicate code among the methods.<br>Which solution should the Architect recommend?",
    "options": [
      "<span class=\"multi-choice-letter\" data-choice-letter=\"A\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tA.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tCreate a common config service class Vendor\\Payment\\Gateway\\Config\\Config under Vendor_Payment and use it as a parent class for all of the Vendor\\PaymentModule\\Gateway\\Config\\Config classes and remove $scopeConfig and $encryptor dependencies",
      "<span class=\"multi-choice-letter\" data-choice-letter=\"B\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tB.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tReplace all Vendor\\PaymentModule\\Gateway\\Config\\Config classes with virtualType of Magento\\Payment\\Gateway\\Config\\Config and set &lt;user_secret backend_model=\u201cMagento\\Config\\Model\\Config\\Backend\\Encrypted\u201d /&gt; under config.xml\n\t\t\t\t\t\t\t\t\t\t<span class=\"badge badge-success most-voted-answer-badge\" title=\"\" style=\"display: none;\" data-original-title=\"This answer is currently the most voted for in the discussion\">\n                Most Voted\n            </span>",
      "<span class=\"multi-choice-letter\" data-choice-letter=\"C\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tC.\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tAdd a plugin after the getValue method of $scopeConfig, remove the $encryptor from dependency and use it in the plugin to decrypt the value if the config name is \u2018user_secret\u2019"
    ],
    "answer": "C",
    "answerDescription": "",
    "votes": [
      {
        "answer": "B",
        "count": 1,
        "isMostVoted": true
      }
    ],
    "comments": [
      {
        "date": "2024-05-28T09:12:00.000Z",
        "voteCount": 1,
        "content": "Adding a plugin to ScopeConfig would not be a good practice as it's called in almost every single module which would potentially impact performance and cause bugs.\nAnswer B is correct. You can add backend_model=\u201cMagento\\Config\\Model\\Config\\Backend\\Encrypted\u201d to fields in config.xml to automatically decrypt them. Using a payment config virtual type is also a common practice (see Braintree module)"
      }
    ],
    "examNameCode": "ad0-e722",
    "topicNumber": "1"
  }
]