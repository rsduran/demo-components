{"ast":null,"code":"var _jsxFileName = \"/Users/reineirduran/demo-components/src/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ChakraProvider, extendTheme, Box, Text, Flex, IconButton } from '@chakra-ui/react';\nimport '@fontsource-variable/karla/wght.css';\nimport { AiOutlineStar, AiFillStar } from 'react-icons/ai';\nimport { PiSealFill } from 'react-icons/pi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = extendTheme({\n  fonts: {\n    body: '\"Karla Variable\", sans-serif'\n  }\n});\nconst MainPage = () => {\n  _s();\n  const [isStarFilled, setIsStarFilled] = useState(false);\n  const questionNumber = 1;\n  const totalQuestions = 10;\n  const questionText = \"A company is planning to run a global marketing application in the AWS Cloud. The application will feature videos that can be viewed by users. The company must ensure that all users can view these videos with low latency. Which AWS service should the company use to meet this requirement?\";\n  const toggleStar = () => {\n    setIsStarFilled(!isStarFilled);\n  };\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      h: \"100vh\",\n      bg: \"white\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        w: \"95%\",\n        maxW: \"800px\",\n        bg: \"#b3ebf2\",\n        borderRadius: \"20px\",\n        border: \"1px solid black\",\n        boxShadow: \"0 4px 0 0 black\",\n        position: \"relative\",\n        overflow: \"hidden\",\n        p: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          mb: \"4\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            bg: \"#00bfff\",\n            px: \"3\",\n            py: \"1\",\n            borderRadius: \"10px\",\n            mt: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"18px\",\n              fontWeight: \"700\",\n              color: \"black\",\n              children: [\"Question \", questionNumber, \" of \", totalQuestions]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            position: \"relative\",\n            width: \"32px\",\n            height: \"32px\",\n            children: [/*#__PURE__*/_jsxDEV(PiSealFill, {\n              size: \"32px\",\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              icon: isStarFilled ? /*#__PURE__*/_jsxDEV(AiFillStar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 38\n              }, this) : /*#__PURE__*/_jsxDEV(AiOutlineStar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 55\n              }, this),\n              variant: \"unstyled\",\n              onClick: toggleStar,\n              \"aria-label\": \"Favorite question\",\n              position: \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n              color: \"black\",\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: \"4\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"20px\",\n            fontWeight: \"500\",\n            color: \"black\",\n            children: questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"uvac7M7RPhO+QcmOnKTZT2KbQEg=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","ChakraProvider","extendTheme","Box","Text","Flex","IconButton","AiOutlineStar","AiFillStar","PiSealFill","jsxDEV","_jsxDEV","theme","fonts","body","MainPage","_s","isStarFilled","setIsStarFilled","questionNumber","totalQuestions","questionText","toggleStar","children","justifyContent","alignItems","h","bg","w","maxW","borderRadius","border","boxShadow","position","overflow","p","mb","px","py","mt","fontSize","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","width","height","size","icon","variant","onClick","top","left","transform","_c","$RefreshReg$"],"sources":["/Users/reineirduran/demo-components/src/MainPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ChakraProvider, extendTheme, Box, Text, Flex, IconButton } from '@chakra-ui/react';\nimport '@fontsource-variable/karla/wght.css';\nimport { AiOutlineStar, AiFillStar } from 'react-icons/ai';\nimport { PiSealFill } from 'react-icons/pi';\n\nconst theme = extendTheme({\n  fonts: {\n    body: '\"Karla Variable\", sans-serif',\n  },\n});\n\nconst MainPage = () => {\n  const [isStarFilled, setIsStarFilled] = useState(false);\n  const questionNumber = 1;\n  const totalQuestions = 10;\n  const questionText = \"A company is planning to run a global marketing application in the AWS Cloud. The application will feature videos that can be viewed by users. The company must ensure that all users can view these videos with low latency. Which AWS service should the company use to meet this requirement?\";\n\n  const toggleStar = () => {\n    setIsStarFilled(!isStarFilled);\n  };\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Flex justifyContent=\"center\" alignItems=\"center\" h=\"100vh\" bg=\"white\">\n        <Box\n          w=\"95%\"\n          maxW=\"800px\"\n          bg=\"#b3ebf2\"\n          borderRadius=\"20px\"\n          border=\"1px solid black\"\n          boxShadow=\"0 4px 0 0 black\"\n          position=\"relative\"\n          overflow=\"hidden\"\n          p=\"6\"\n        >\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"4\">\n            <Box\n              bg=\"#00bfff\"\n              px=\"3\"\n              py=\"1\"\n              borderRadius=\"10px\"\n              mt=\"4\"\n            >\n              <Text fontSize=\"18px\" fontWeight=\"700\" color=\"black\">\n                Question {questionNumber} of {totalQuestions}\n              </Text>\n            </Box>\n            <Box position=\"relative\" width=\"32px\" height=\"32px\">\n              <PiSealFill size=\"32px\" color=\"white\" />\n              <IconButton\n                icon={isStarFilled ? <AiFillStar /> : <AiOutlineStar />}\n                variant=\"unstyled\"\n                onClick={toggleStar}\n                aria-label=\"Favorite question\"\n                position=\"absolute\"\n                top=\"50%\"\n                left=\"50%\"\n                transform=\"translate(-50%, -50%)\"\n                color=\"black\"\n                size=\"sm\"\n              />\n            </Box>\n          </Flex>\n          <Box mt=\"4\">\n            <Text fontSize=\"20px\" fontWeight=\"500\" color=\"black\">\n              {questionText}\n            </Text>\n          </Box>\n        </Box>\n      </Flex>\n    </ChakraProvider>\n  );\n};\n\nexport default MainPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}