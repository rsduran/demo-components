{"ast":null,"code":"var _jsxFileName = \"/Users/reineirduran/demo-components/src/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ChakraProvider, extendTheme, Box, Text, Flex } from '@chakra-ui/react';\nimport '@fontsource-variable/karla/wght.css';\nimport { AiOutlineStar, AiFillStar } from 'react-icons/ai';\nimport { PiSealFill } from 'react-icons/pi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = extendTheme({\n  fonts: {\n    body: '\"Karla Variable\", sans-serif'\n  }\n});\nconst IconBox = ({\n  icon: Icon,\n  bgColor,\n  size,\n  iconScale,\n  onClick\n}) => {\n  const iconSize = `${parseInt(size) * iconScale}px`;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    width: size,\n    height: size,\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(PiSealFill, {\n      size: size,\n      color: bgColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        size: iconSize,\n        color: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = IconBox;\nconst MainPage = () => {\n  _s();\n  const [isStarFilled, setIsStarFilled] = useState(false);\n  const questionNumber = 1;\n  const totalQuestions = 10;\n  const questionText = \"A company is planning to run a global marketing application in the AWS Cloud. The application will feature videos that can be viewed by users. The company must ensure that all users can view these videos with low latency. Which AWS service should the company use to meet this requirement?\";\n  const toggleStar = () => {\n    setIsStarFilled(!isStarFilled);\n  };\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      h: \"100vh\",\n      bg: \"white\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        w: \"95%\",\n        maxW: \"800px\",\n        bg: \"#b3ebf2\",\n        borderRadius: \"20px\",\n        border: \"1px solid black\",\n        boxShadow: \"0 4px 0 0 black\",\n        position: \"relative\",\n        overflow: \"hidden\",\n        p: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          mb: \"4\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            bg: \"#00bfff\",\n            px: \"3\",\n            py: \"1\",\n            borderRadius: \"10px\",\n            mt: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"18px\",\n              fontWeight: \"700\",\n              color: \"black\",\n              children: [\"Question \", questionNumber, \" of \", totalQuestions]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconBox, {\n            icon: isStarFilled ? AiFillStar : AiOutlineStar,\n            bgColor: \"white\",\n            size: \"32px\",\n            iconScale: 0.6,\n            onClick: toggleStar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: \"4\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"20px\",\n            fontWeight: \"500\",\n            color: \"black\",\n            children: questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"uvac7M7RPhO+QcmOnKTZT2KbQEg=\");\n_c2 = MainPage;\nexport default MainPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"IconBox\");\n$RefreshReg$(_c2, \"MainPage\");","map":{"version":3,"names":["React","useState","ChakraProvider","extendTheme","Box","Text","Flex","AiOutlineStar","AiFillStar","PiSealFill","jsxDEV","_jsxDEV","theme","fonts","body","IconBox","icon","Icon","bgColor","size","iconScale","onClick","iconSize","parseInt","position","width","height","children","color","fileName","_jsxFileName","lineNumber","columnNumber","top","left","transform","alignItems","justifyContent","_c","MainPage","_s","isStarFilled","setIsStarFilled","questionNumber","totalQuestions","questionText","toggleStar","h","bg","w","maxW","borderRadius","border","boxShadow","overflow","p","mb","px","py","mt","fontSize","fontWeight","_c2","$RefreshReg$"],"sources":["/Users/reineirduran/demo-components/src/MainPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ChakraProvider, extendTheme, Box, Text, Flex } from '@chakra-ui/react';\nimport '@fontsource-variable/karla/wght.css';\nimport { AiOutlineStar, AiFillStar } from 'react-icons/ai';\nimport { PiSealFill } from 'react-icons/pi';\n\nconst theme = extendTheme({\n  fonts: {\n    body: '\"Karla Variable\", sans-serif',\n  },\n});\n\nconst IconBox = ({ icon: Icon, bgColor, size, iconScale, onClick }) => {\n  const iconSize = `${parseInt(size) * iconScale}px`;\n\n  return (\n    <Box position=\"relative\" width={size} height={size} onClick={onClick}>\n      <PiSealFill size={size} color={bgColor} />\n      <Flex\n        position=\"absolute\"\n        top=\"50%\"\n        left=\"50%\"\n        transform=\"translate(-50%, -50%)\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Icon size={iconSize} color=\"black\" />\n      </Flex>\n    </Box>\n  );\n};\n\nconst MainPage = () => {\n  const [isStarFilled, setIsStarFilled] = useState(false);\n  const questionNumber = 1;\n  const totalQuestions = 10;\n  const questionText = \"A company is planning to run a global marketing application in the AWS Cloud. The application will feature videos that can be viewed by users. The company must ensure that all users can view these videos with low latency. Which AWS service should the company use to meet this requirement?\";\n\n  const toggleStar = () => {\n    setIsStarFilled(!isStarFilled);\n  };\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Flex justifyContent=\"center\" alignItems=\"center\" h=\"100vh\" bg=\"white\">\n        <Box\n          w=\"95%\"\n          maxW=\"800px\"\n          bg=\"#b3ebf2\"\n          borderRadius=\"20px\"\n          border=\"1px solid black\"\n          boxShadow=\"0 4px 0 0 black\"\n          position=\"relative\"\n          overflow=\"hidden\"\n          p=\"6\"\n        >\n          <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"4\">\n            <Box\n              bg=\"#00bfff\"\n              px=\"3\"\n              py=\"1\"\n              borderRadius=\"10px\"\n              mt=\"4\"\n            >\n              <Text fontSize=\"18px\" fontWeight=\"700\" color=\"black\">\n                Question {questionNumber} of {totalQuestions}\n              </Text>\n            </Box>\n            <IconBox\n              icon={isStarFilled ? AiFillStar : AiOutlineStar}\n              bgColor=\"white\"\n              size=\"32px\"\n              iconScale={0.6}\n              onClick={toggleStar}\n            />\n          </Flex>\n          <Box mt=\"4\">\n            <Text fontSize=\"20px\" fontWeight=\"500\" color=\"black\">\n              {questionText}\n            </Text>\n          </Box>\n        </Box>\n      </Flex>\n    </ChakraProvider>\n  );\n};\n\nexport default MainPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}