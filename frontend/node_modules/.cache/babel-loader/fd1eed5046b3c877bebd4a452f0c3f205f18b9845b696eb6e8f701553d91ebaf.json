{"ast":null,"code":"var _jsxFileName = \"/Users/reineirduran/demo-components/frontend/src/components/ActualExamPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, VStack } from '@chakra-ui/react';\nimport QuestionBox from './QuestionBox';\nimport OptionsBox from './OptionsBox';\nimport AnswerBox from './AnswerBox';\nimport TopicBox from './TopicBox';\nimport TopicSelector from './TopicSelector';\nimport TabList from './TabList';\nimport SearchBar from './SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActualExamPage = () => {\n  _s();\n  const {\n    examId\n  } = useParams();\n  const [examData, setExamData] = useState(null);\n  const [currentTopic, setCurrentTopic] = useState(1);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [availableTopics, setAvailableTopics] = useState([]);\n  useEffect(() => {\n    // Fetch exam data based on examId\n    const fetchExamData = async () => {\n      try {\n        // Replace this with your actual API call\n        const response = await fetch(`/api/exams/${examId}`);\n        const data = await response.json();\n        setExamData(data);\n        setAvailableTopics(Object.keys(data.topics).map(Number));\n      } catch (error) {\n        console.error('Error fetching exam data:', error);\n      }\n    };\n    fetchExamData();\n  }, [examId]);\n  const handleTopicChange = topic => {\n    setCurrentTopic(topic);\n    setCurrentQuestionIndex(0);\n  };\n  const handleQuestionChange = index => {\n    setCurrentQuestionIndex(index);\n  };\n  if (!examData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  const currentTopicQuestions = examData.topics[currentTopic] || [];\n  const currentQuestion = currentTopicQuestions[currentQuestionIndex] || {};\n  return /*#__PURE__*/_jsxDEV(Box, {\n    padding: 8,\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 8,\n      align: \"stretch\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: () => {},\n        onShuffle: () => {},\n        onReset: () => {},\n        onSubmit: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabList, {\n        tabs: ['ALL QUESTIONS', 'FAVORITES', 'ANSWERED', 'UNANSWERED', 'INCORRECT'],\n        onTabChange: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuestionBox, {\n        questionNumber: currentQuestionIndex + 1,\n        totalQuestionsInTopic: currentTopicQuestions.length,\n        questionText: currentQuestion.questionText,\n        isStarFilled: false,\n        toggleStar: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OptionsBox, {\n        options: currentQuestion.options || []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnswerBox, {\n        answer: currentQuestion.answer,\n        answerDescription: currentQuestion.answerDescription,\n        votes: currentQuestion.votes || []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TopicBox, {\n        topicNumber: currentTopic,\n        examCode: examData.examCode,\n        examTitle: examData.examTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TopicSelector, {\n        availableTopics: availableTopics,\n        currentTopic: currentTopic,\n        onTopicChange: handleTopicChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ActualExamPage, \"qReTI99wIwvE2ryTYufYru0v+T0=\", false, function () {\n  return [useParams];\n});\n_c = ActualExamPage;\nexport default ActualExamPage;\nvar _c;\n$RefreshReg$(_c, \"ActualExamPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Box","VStack","QuestionBox","OptionsBox","AnswerBox","TopicBox","TopicSelector","TabList","SearchBar","jsxDEV","_jsxDEV","ActualExamPage","_s","examId","examData","setExamData","currentTopic","setCurrentTopic","currentQuestionIndex","setCurrentQuestionIndex","availableTopics","setAvailableTopics","fetchExamData","response","fetch","data","json","Object","keys","topics","map","Number","error","console","handleTopicChange","topic","handleQuestionChange","index","children","fileName","_jsxFileName","lineNumber","columnNumber","currentTopicQuestions","currentQuestion","padding","spacing","align","onSearch","onShuffle","onReset","onSubmit","tabs","onTabChange","questionNumber","totalQuestionsInTopic","length","questionText","isStarFilled","toggleStar","options","answer","answerDescription","votes","topicNumber","examCode","examTitle","onTopicChange","_c","$RefreshReg$"],"sources":["/Users/reineirduran/demo-components/frontend/src/components/ActualExamPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, VStack } from '@chakra-ui/react';\nimport QuestionBox from './QuestionBox';\nimport OptionsBox from './OptionsBox';\nimport AnswerBox from './AnswerBox';\nimport TopicBox from './TopicBox';\nimport TopicSelector from './TopicSelector';\nimport TabList from './TabList';\nimport SearchBar from './SearchBar';\n\nconst ActualExamPage = () => {\n  const { examId } = useParams();\n  const [examData, setExamData] = useState(null);\n  const [currentTopic, setCurrentTopic] = useState(1);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [availableTopics, setAvailableTopics] = useState([]);\n\n  useEffect(() => {\n    // Fetch exam data based on examId\n    const fetchExamData = async () => {\n      try {\n        // Replace this with your actual API call\n        const response = await fetch(`/api/exams/${examId}`);\n        const data = await response.json();\n        setExamData(data);\n        setAvailableTopics(Object.keys(data.topics).map(Number));\n      } catch (error) {\n        console.error('Error fetching exam data:', error);\n      }\n    };\n\n    fetchExamData();\n  }, [examId]);\n\n  const handleTopicChange = (topic) => {\n    setCurrentTopic(topic);\n    setCurrentQuestionIndex(0);\n  };\n\n  const handleQuestionChange = (index) => {\n    setCurrentQuestionIndex(index);\n  };\n\n  if (!examData) {\n    return <div>Loading...</div>;\n  }\n\n  const currentTopicQuestions = examData.topics[currentTopic] || [];\n  const currentQuestion = currentTopicQuestions[currentQuestionIndex] || {};\n\n  return (\n    <Box padding={8}>\n      <VStack spacing={8} align=\"stretch\">\n        <SearchBar\n          onSearch={() => {}}\n          onShuffle={() => {}}\n          onReset={() => {}}\n          onSubmit={() => {}}\n        />\n        <TabList\n          tabs={['ALL QUESTIONS', 'FAVORITES', 'ANSWERED', 'UNANSWERED', 'INCORRECT']}\n          onTabChange={() => {}}\n        />\n        <QuestionBox\n          questionNumber={currentQuestionIndex + 1}\n          totalQuestionsInTopic={currentTopicQuestions.length}\n          questionText={currentQuestion.questionText}\n          isStarFilled={false}\n          toggleStar={() => {}}\n        />\n        <OptionsBox options={currentQuestion.options || []} />\n        <AnswerBox\n          answer={currentQuestion.answer}\n          answerDescription={currentQuestion.answerDescription}\n          votes={currentQuestion.votes || []}\n        />\n        <TopicBox\n          topicNumber={currentTopic}\n          examCode={examData.examCode}\n          examTitle={examData.examTitle}\n        />\n        <TopicSelector\n          availableTopics={availableTopics}\n          currentTopic={currentTopic}\n          onTopicChange={handleTopicChange}\n        />\n      </VStack>\n    </Box>\n  );\n};\n\nexport default ActualExamPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}