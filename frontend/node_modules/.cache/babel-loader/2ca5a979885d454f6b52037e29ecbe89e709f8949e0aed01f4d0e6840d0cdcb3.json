{"ast":null,"code":"var _jsxFileName = \"/Users/reineirduran/demo-components/frontend/src/components/Breadcrumbs.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Flex, Text, Link, Tooltip } from '@chakra-ui/react';\nimport { ChevronRightIcon } from '@chakra-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Breadcrumbs = ({\n  items\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const itemRefs = useRef([]);\n  const [examNameWidth, setExamNameWidth] = useState('auto');\n  useEffect(() => {\n    const checkOverflow = () => {\n      if (containerRef.current) {\n        const container = containerRef.current;\n        let availableWidth = container.offsetWidth;\n\n        // Calculate space taken by non-exam items\n        let nonExamWidth = 0;\n        for (let i = 0; i < items.length - 1; i++) {\n          const itemRef = itemRefs.current[i];\n          if (itemRef) {\n            nonExamWidth += itemRef.offsetWidth + 24; // 24px for chevron and spacing\n          }\n        }\n\n        // Calculate remaining space for exam name\n        const remainingSpace = availableWidth - nonExamWidth;\n        setExamNameWidth(`${Math.max(remainingSpace, 100)}px`); // Minimum 100px for exam name\n      }\n    };\n    checkOverflow();\n    window.addEventListener('resize', checkOverflow);\n    return () => window.removeEventListener('resize', checkOverflow);\n  }, [items]);\n  const renderItem = (item, index) => {\n    const isLast = index === items.length - 1;\n    const content = /*#__PURE__*/_jsxDEV(Text, {\n      color: item.isCurrentPage ? \"gray.500\" : \"blue.500\",\n      fontWeight: \"500\",\n      fontSize: \"16px\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      maxWidth: isLast ? examNameWidth : \"none\",\n      ref: el => itemRefs.current[index] = el,\n      as: item.isCurrentPage ? \"span\" : Link,\n      href: item.isCurrentPage ? undefined : item.href,\n      _hover: item.isCurrentPage ? undefined : {\n        textDecoration: 'underline'\n      },\n      children: item.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n    return isLast ? /*#__PURE__*/_jsxDEV(Tooltip, {\n      label: item.label,\n      \"aria-label\": \"Full exam title\",\n      children: content\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this) : content;\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    align: \"center\",\n    ml: 4,\n    ref: containerRef,\n    overflow: \"hidden\",\n    children: items.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [index > 0 && /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n        mx: 2,\n        color: \"gray.500\",\n        flexShrink: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this), renderItem(item, index)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Breadcrumbs, \"AFQ5XOYzy1kjIhnyj0h9o0MhWHs=\");\n_c = Breadcrumbs;\nexport default Breadcrumbs;\nvar _c;\n$RefreshReg$(_c, \"Breadcrumbs\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Flex","Text","Link","Tooltip","ChevronRightIcon","jsxDEV","_jsxDEV","Breadcrumbs","items","_s","containerRef","itemRefs","examNameWidth","setExamNameWidth","checkOverflow","current","container","availableWidth","offsetWidth","nonExamWidth","i","length","itemRef","remainingSpace","Math","max","window","addEventListener","removeEventListener","renderItem","item","index","isLast","content","color","isCurrentPage","fontWeight","fontSize","whiteSpace","overflow","textOverflow","maxWidth","ref","el","as","href","undefined","_hover","textDecoration","children","label","fileName","_jsxFileName","lineNumber","columnNumber","align","ml","map","Fragment","mx","flexShrink","_c","$RefreshReg$"],"sources":["/Users/reineirduran/demo-components/frontend/src/components/Breadcrumbs.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { Flex, Text, Link, Tooltip } from '@chakra-ui/react';\nimport { ChevronRightIcon } from '@chakra-ui/icons';\n\nconst Breadcrumbs = ({ items }) => {\n  const containerRef = useRef(null);\n  const itemRefs = useRef([]);\n  const [examNameWidth, setExamNameWidth] = useState('auto');\n\n  useEffect(() => {\n    const checkOverflow = () => {\n      if (containerRef.current) {\n        const container = containerRef.current;\n        let availableWidth = container.offsetWidth;\n        \n        // Calculate space taken by non-exam items\n        let nonExamWidth = 0;\n        for (let i = 0; i < items.length - 1; i++) {\n          const itemRef = itemRefs.current[i];\n          if (itemRef) {\n            nonExamWidth += itemRef.offsetWidth + 24; // 24px for chevron and spacing\n          }\n        }\n\n        // Calculate remaining space for exam name\n        const remainingSpace = availableWidth - nonExamWidth;\n        setExamNameWidth(`${Math.max(remainingSpace, 100)}px`); // Minimum 100px for exam name\n      }\n    };\n\n    checkOverflow();\n    window.addEventListener('resize', checkOverflow);\n    return () => window.removeEventListener('resize', checkOverflow);\n  }, [items]);\n\n  const renderItem = (item, index) => {\n    const isLast = index === items.length - 1;\n    const content = (\n      <Text\n        color={item.isCurrentPage ? \"gray.500\" : \"blue.500\"}\n        fontWeight=\"500\"\n        fontSize=\"16px\"\n        whiteSpace=\"nowrap\"\n        overflow=\"hidden\"\n        textOverflow=\"ellipsis\"\n        maxWidth={isLast ? examNameWidth : \"none\"}\n        ref={el => itemRefs.current[index] = el}\n        as={item.isCurrentPage ? \"span\" : Link}\n        href={item.isCurrentPage ? undefined : item.href}\n        _hover={item.isCurrentPage ? undefined : { textDecoration: 'underline' }}\n      >\n        {item.label}\n      </Text>\n    );\n\n    return isLast ? (\n      <Tooltip key={index} label={item.label} aria-label=\"Full exam title\">\n        {content}\n      </Tooltip>\n    ) : content;\n  };\n\n  return (\n    <Flex align=\"center\" ml={4} ref={containerRef} overflow=\"hidden\">\n      {items.map((item, index) => (\n        <React.Fragment key={index}>\n          {index > 0 && <ChevronRightIcon mx={2} color=\"gray.500\" flexShrink={0} />}\n          {renderItem(item, index)}\n        </React.Fragment>\n      ))}\n    </Flex>\n  );\n};\n\nexport default Breadcrumbs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}