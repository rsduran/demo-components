{"ast":null,"code":"var _jsxFileName = \"/Users/reineirduran/demo-components/frontend/src/ProviderContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProviderContext = /*#__PURE__*/createContext();\nexport const ProviderProvider = ({\n  children\n}) => {\n  _s();\n  const [providers, setProviders] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const fetchProviders = async (page = 1) => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`http://localhost:5000/api/providers?page=${page}&per_page=10`);\n      const data = await response.json();\n      setProviders(prevProviders => [...prevProviders, ...data.providers]);\n      setTotalPages(data.pages);\n      setCurrentPage(data.current_page);\n    } catch (error) {\n      console.error('Error fetching providers:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchProviders();\n  }, []);\n  const loadMoreProviders = () => {\n    if (currentPage < totalPages) {\n      fetchProviders(currentPage + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ProviderContext.Provider, {\n    value: {\n      providers,\n      isLoading,\n      loadMoreProviders,\n      hasMore: currentPage < totalPages\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ProviderProvider, \"CHpNyK5TYBNNPUqELmia5C/+rnk=\");\n_c = ProviderProvider;\nexport const useProviders = () => {\n  _s2();\n  return useContext(ProviderContext);\n};\n_s2(useProviders, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ProviderProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ProviderContext","ProviderProvider","children","_s","providers","setProviders","isLoading","setIsLoading","currentPage","setCurrentPage","totalPages","setTotalPages","fetchProviders","page","response","fetch","data","json","prevProviders","pages","current_page","error","console","loadMoreProviders","Provider","value","hasMore","fileName","_jsxFileName","lineNumber","columnNumber","_c","useProviders","_s2","$RefreshReg$"],"sources":["/Users/reineirduran/demo-components/frontend/src/ProviderContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ProviderContext = createContext();\n\nexport const ProviderProvider = ({ children }) => {\n  const [providers, setProviders] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const fetchProviders = async (page = 1) => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`http://localhost:5000/api/providers?page=${page}&per_page=10`);\n      const data = await response.json();\n      setProviders(prevProviders => [...prevProviders, ...data.providers]);\n      setTotalPages(data.pages);\n      setCurrentPage(data.current_page);\n    } catch (error) {\n      console.error('Error fetching providers:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchProviders();\n  }, []);\n\n  const loadMoreProviders = () => {\n    if (currentPage < totalPages) {\n      fetchProviders(currentPage + 1);\n    }\n  };\n\n  return (\n    <ProviderContext.Provider value={{ providers, isLoading, loadMoreProviders, hasMore: currentPage < totalPages }}>\n      {children}\n    </ProviderContext.Provider>\n  );\n};\n\nexport const useProviders = () => useContext(ProviderContext);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMO,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAMgB,cAAc,GAAG,MAAAA,CAAOC,IAAI,GAAG,CAAC,KAAK;IACzCN,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4CF,IAAI,cAAc,CAAC;MAC5F,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCZ,YAAY,CAACa,aAAa,IAAI,CAAC,GAAGA,aAAa,EAAE,GAAGF,IAAI,CAACZ,SAAS,CAAC,CAAC;MACpEO,aAAa,CAACK,IAAI,CAACG,KAAK,CAAC;MACzBV,cAAc,CAACO,IAAI,CAACI,YAAY,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,SAAS;MACRd,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACde,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIf,WAAW,GAAGE,UAAU,EAAE;MAC5BE,cAAc,CAACJ,WAAW,GAAG,CAAC,CAAC;IACjC;EACF,CAAC;EAED,oBACET,OAAA,CAACC,eAAe,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAErB,SAAS;MAAEE,SAAS;MAAEiB,iBAAiB;MAAEG,OAAO,EAAElB,WAAW,GAAGE;IAAW,CAAE;IAAAR,QAAA,EAC7GA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAAC3B,EAAA,CApCWF,gBAAgB;AAAA8B,EAAA,GAAhB9B,gBAAgB;AAsC7B,OAAO,MAAM+B,YAAY,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMtC,UAAU,CAACK,eAAe,CAAC;AAAA;AAACiC,GAAA,CAAjDD,YAAY;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}