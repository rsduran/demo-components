{"ast":null,"code":"var _jsxFileName = \"/Users/reineirduran/demo-components/frontend/src/components/Breadcrumbs.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Flex, Text, Link, Tooltip } from '@chakra-ui/react';\nimport { ChevronRightIcon } from '@chakra-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Breadcrumbs = ({\n  items\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const itemRefs = useRef([]);\n  const [itemWidths, setItemWidths] = useState([]);\n  useEffect(() => {\n    const checkOverflow = () => {\n      if (containerRef.current) {\n        const container = containerRef.current;\n        const availableWidth = container.offsetWidth;\n        const newItemWidths = itemRefs.current.map(ref => ref ? ref.offsetWidth : 0);\n        let totalWidth = newItemWidths.reduce((sum, width, index) => sum + width + (index > 0 ? 16 : 0), 0);\n        if (totalWidth > availableWidth) {\n          const middleIndex = Math.floor(items.length / 2);\n          let i = middleIndex;\n          let j = middleIndex;\n          while (totalWidth > availableWidth && (i > 0 || j < items.length - 1)) {\n            if (i > 0) {\n              totalWidth -= newItemWidths[i] - 50; // 50px for truncated item\n              newItemWidths[i] = 50;\n              i--;\n            }\n            if (j < items.length - 1 && totalWidth > availableWidth) {\n              totalWidth -= newItemWidths[j] - 50;\n              newItemWidths[j] = 50;\n              j++;\n            }\n          }\n        }\n        setItemWidths(newItemWidths);\n      }\n    };\n    checkOverflow();\n    window.addEventListener('resize', checkOverflow);\n    return () => window.removeEventListener('resize', checkOverflow);\n  }, [items]);\n  const renderItem = (item, index) => {\n    const isTruncated = itemWidths[index] === 50;\n    const content = /*#__PURE__*/_jsxDEV(Text, {\n      color: item.isCurrentPage ? \"gray.500\" : \"blue.500\",\n      fontWeight: \"500\",\n      fontSize: \"16px\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      maxWidth: `${itemWidths[index]}px`,\n      ref: el => itemRefs.current[index] = el,\n      as: item.isCurrentPage ? \"span\" : Link,\n      href: item.isCurrentPage ? undefined : item.href,\n      _hover: item.isCurrentPage ? undefined : {\n        textDecoration: 'underline'\n      },\n      children: isTruncated ? item.label.slice(0, 3) + '...' : item.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n    return isTruncated ? /*#__PURE__*/_jsxDEV(Tooltip, {\n      label: item.label,\n      \"aria-label\": \"Full breadcrumb text\",\n      children: content\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this) : content;\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    align: \"center\",\n    ref: containerRef,\n    overflow: \"hidden\",\n    width: \"100%\",\n    children: items.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [index > 0 && /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n        mx: 1,\n        color: \"gray.500\",\n        flexShrink: 0,\n        boxSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this), renderItem(item, index)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Breadcrumbs, \"XV6EreX8yudzTKvFMcJoR4gUR48=\");\n_c = Breadcrumbs;\nexport default Breadcrumbs;\nvar _c;\n$RefreshReg$(_c, \"Breadcrumbs\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Flex","Text","Link","Tooltip","ChevronRightIcon","jsxDEV","_jsxDEV","Breadcrumbs","items","_s","containerRef","itemRefs","itemWidths","setItemWidths","checkOverflow","current","container","availableWidth","offsetWidth","newItemWidths","map","ref","totalWidth","reduce","sum","width","index","middleIndex","Math","floor","length","i","j","window","addEventListener","removeEventListener","renderItem","item","isTruncated","content","color","isCurrentPage","fontWeight","fontSize","whiteSpace","overflow","textOverflow","maxWidth","el","as","href","undefined","_hover","textDecoration","children","label","slice","fileName","_jsxFileName","lineNumber","columnNumber","align","Fragment","mx","flexShrink","boxSize","_c","$RefreshReg$"],"sources":["/Users/reineirduran/demo-components/frontend/src/components/Breadcrumbs.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { Flex, Text, Link, Tooltip } from '@chakra-ui/react';\nimport { ChevronRightIcon } from '@chakra-ui/icons';\n\nconst Breadcrumbs = ({ items }) => {\n  const containerRef = useRef(null);\n  const itemRefs = useRef([]);\n  const [itemWidths, setItemWidths] = useState([]);\n\n  useEffect(() => {\n    const checkOverflow = () => {\n      if (containerRef.current) {\n        const container = containerRef.current;\n        const availableWidth = container.offsetWidth;\n        const newItemWidths = itemRefs.current.map(ref => ref ? ref.offsetWidth : 0);\n        \n        let totalWidth = newItemWidths.reduce((sum, width, index) => sum + width + (index > 0 ? 16 : 0), 0);\n        \n        if (totalWidth > availableWidth) {\n          const middleIndex = Math.floor(items.length / 2);\n          let i = middleIndex;\n          let j = middleIndex;\n          \n          while (totalWidth > availableWidth && (i > 0 || j < items.length - 1)) {\n            if (i > 0) {\n              totalWidth -= newItemWidths[i] - 50; // 50px for truncated item\n              newItemWidths[i] = 50;\n              i--;\n            }\n            if (j < items.length - 1 && totalWidth > availableWidth) {\n              totalWidth -= newItemWidths[j] - 50;\n              newItemWidths[j] = 50;\n              j++;\n            }\n          }\n        }\n        \n        setItemWidths(newItemWidths);\n      }\n    };\n\n    checkOverflow();\n    window.addEventListener('resize', checkOverflow);\n    return () => window.removeEventListener('resize', checkOverflow);\n  }, [items]);\n\n  const renderItem = (item, index) => {\n    const isTruncated = itemWidths[index] === 50;\n    \n    const content = (\n      <Text\n        color={item.isCurrentPage ? \"gray.500\" : \"blue.500\"}\n        fontWeight=\"500\"\n        fontSize=\"16px\"\n        whiteSpace=\"nowrap\"\n        overflow=\"hidden\"\n        textOverflow=\"ellipsis\"\n        maxWidth={`${itemWidths[index]}px`}\n        ref={el => itemRefs.current[index] = el}\n        as={item.isCurrentPage ? \"span\" : Link}\n        href={item.isCurrentPage ? undefined : item.href}\n        _hover={item.isCurrentPage ? undefined : { textDecoration: 'underline' }}\n      >\n        {isTruncated ? item.label.slice(0, 3) + '...' : item.label}\n      </Text>\n    );\n\n    return isTruncated ? (\n      <Tooltip key={index} label={item.label} aria-label=\"Full breadcrumb text\">\n        {content}\n      </Tooltip>\n    ) : content;\n  };\n\n  return (\n    <Flex align=\"center\" ref={containerRef} overflow=\"hidden\" width=\"100%\">\n      {items.map((item, index) => (\n        <React.Fragment key={index}>\n          {index > 0 && <ChevronRightIcon mx={1} color=\"gray.500\" flexShrink={0} boxSize={3} />}\n          {renderItem(item, index)}\n        </React.Fragment>\n      ))}\n    </Flex>\n  );\n};\n\nexport default Breadcrumbs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}