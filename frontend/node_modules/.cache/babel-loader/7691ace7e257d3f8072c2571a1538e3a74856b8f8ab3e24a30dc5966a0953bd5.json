{"ast":null,"code":"var _jsxFileName = \"/Users/reineirduran/demo-components/frontend/src/MainPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, lazy, Suspense, useEffect } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport { ChakraProvider, extendTheme, Flex, Box, VStack, Spinner, Center, Text, Button } from \"@chakra-ui/react\";\nimport \"@fontsource-variable/karla/wght.css\";\nimport Sidebar from \"./components/Sidebar\";\nimport Navbar from \"./components/Navbar\";\nimport Breadcrumbs from \"./components/Breadcrumbs\";\nimport ComingSoonComponent from \"./components/ComingSoonComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProviderExamsCard = /*#__PURE__*/lazy(_c = () => import(\"./components/ProviderExamsCard\"));\n_c2 = ProviderExamsCard;\nconst ProvidersPage = /*#__PURE__*/lazy(_c3 = () => import(\"./components/ProvidersPage\"));\n_c4 = ProvidersPage;\nconst QuestionPanel = /*#__PURE__*/lazy(_c5 = () => import(\"./components/QuestionPanel\"));\n_c6 = QuestionPanel;\nconst DownloadBox = /*#__PURE__*/lazy(_c7 = () => import(\"./components/DownloadBox\"));\n_c8 = DownloadBox;\nconst TopicSelector = /*#__PURE__*/lazy(_c9 = () => import(\"./components/TopicSelector\"));\n_c10 = TopicSelector;\nconst Dashboard = /*#__PURE__*/lazy(_c11 = () => import(\"./components/Dashboard\"));\n_c12 = Dashboard;\nconst TopicBox = /*#__PURE__*/lazy(_c13 = () => import(\"./components/TopicBox\"));\n_c14 = TopicBox;\nconst theme = extendTheme({\n  fonts: {\n    body: '\"Karla Variable\", sans-serif'\n  },\n  components: {\n    Button: {\n      variants: {\n        referral: {\n          height: \"48px\",\n          fontSize: \"16px\",\n          paddingLeft: \"24px\",\n          paddingRight: \"24px\",\n          borderRadius: \"full\",\n          border: \"2px solid black\",\n          fontWeight: 700,\n          textTransform: \"uppercase\",\n          transition: \"0.3s\",\n          boxShadow: \"0 4px 0 0 black\",\n          _hover: {\n            transform: \"translateY(2px)\",\n            boxShadow: \"0 2px 0 0 black\"\n          },\n          _active: {\n            transform: \"translateY(4px)\",\n            boxShadow: \"none\"\n          },\n          borderRight: \"0\",\n          _first: {\n            borderTopLeftRadius: \"full\",\n            borderBottomLeftRadius: \"full\"\n          },\n          _last: {\n            borderRight: \"2px solid black\",\n            borderTopRightRadius: \"full\",\n            borderBottomRightRadius: \"full\"\n          }\n        }\n      }\n    }\n  }\n});\nconst LoadingSpinner = () => /*#__PURE__*/_jsxDEV(Center, {\n  position: \"fixed\",\n  top: \"0\",\n  left: \"0\",\n  right: \"0\",\n  bottom: \"0\",\n  backgroundColor: \"rgba(255, 255, 255, 0.8)\",\n  zIndex: \"9999\",\n  children: /*#__PURE__*/_jsxDEV(Spinner, {\n    size: \"xl\",\n    color: \"#00bfff\",\n    thickness: \"4px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 71,\n  columnNumber: 3\n}, this);\n_c15 = LoadingSpinner;\nconst MainPage = () => {\n  _s();\n  const [isStarFilled, setIsStarFilled] = useState(false);\n  const [currentTopic, setCurrentTopic] = useState(1);\n  const [isSidebarCollapsed, setIsSidebarCollapsed] = useState(false);\n  const [currentExam, setCurrentExam] = useState(null);\n  const [examData, setExamData] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [view, setView] = useState(\"grid\");\n  const {\n    examId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const getActiveItem = path => {\n    if (path === \"/\") return \"Dashboard\";\n    if (path.startsWith(\"/providers\")) return \"Providers\";\n    if (path.startsWith(\"/exams\")) return \"Exams\";\n    if (path.startsWith(\"/custom-exam\")) return \"Custom Exam\";\n    if (path.startsWith(\"/actual-exam\")) return \"Actual Exam\";\n    return \"\";\n  };\n  const activeItem = getActiveItem(location.pathname);\n  useEffect(() => {\n    if (location.pathname === \"/actual-exam\" && !examId) {\n      navigate(\"/exams\");\n    }\n  }, [location, navigate, examId]);\n  useEffect(() => {\n    if (examId) {\n      setCurrentExam(examId);\n    }\n  }, [examId]);\n  useEffect(() => {\n    if (currentExam) {\n      const fetchExamData = async () => {\n        try {\n          setExamData(null);\n          const response = await fetch(`http://localhost:5000/api/exams/${currentExam}`);\n          const data = await response.json();\n          setExamData(data);\n          const topics = Object.keys(data.topics).map(Number);\n          setCurrentTopic(topics.length === 1 ? topics[0] : currentTopic || topics[0]);\n          setCurrentQuestionIndex(0);\n        } catch (error) {\n          console.error(\"Error fetching exam data:\", error);\n        }\n      };\n      fetchExamData();\n    }\n  }, [currentExam, currentTopic]);\n  const toggleStar = event => {\n    event.stopPropagation();\n    setIsStarFilled(!isStarFilled);\n  };\n  const toggleSidebar = () => {\n    setIsSidebarCollapsed(!isSidebarCollapsed);\n  };\n  const handleExamSelect = examId => {\n    navigate(`/actual-exam/${examId}`);\n  };\n  const handleTabChange = tab => {\n    console.log(`Tab changed to: ${tab}`);\n  };\n  const handleSearch = searchTerm => {\n    console.log(\"Searching for:\", searchTerm);\n  };\n  const handleShuffle = () => {\n    console.log(\"Shuffling questions\");\n  };\n  const handleReset = () => {\n    console.log(\"Resetting questions\");\n  };\n  const handleSubmit = () => {\n    console.log(\"Submitting answer\");\n  };\n  const handleTopicChange = topic => {\n    setCurrentTopic(topic);\n    setCurrentQuestionIndex(0);\n  };\n  const handleQuestionChange = newIndex => {\n    const currentTopicQuestions = examData.topics[currentTopic] || [];\n    if (newIndex >= 0 && newIndex < currentTopicQuestions.length) {\n      setCurrentQuestionIndex(newIndex);\n    }\n  };\n  const handleViewChange = newView => {\n    setView(newView);\n  };\n  const renderContent = () => {\n    const path = location.pathname;\n    if (path === \"/\") {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        width: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this);\n    } else if (path === \"/providers\") {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        width: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(ProvidersPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this);\n    } else if (path === \"/exams\") {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        width: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(ProviderExamsCard, {\n          onExamSelect: handleExamSelect,\n          view: view,\n          onViewChange: handleViewChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this);\n    } else if (path === \"/custom-exam\") {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        width: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(ComingSoonComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this);\n    } else if (path.startsWith(\"/actual-exam\")) {\n      if (path === \"/actual-exam\") {\n        return /*#__PURE__*/_jsxDEV(Center, {\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"xl\",\n              children: \"Please select an exam first.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"blue\",\n              onClick: () => navigate(\"/exams\"),\n              children: \"Go to Exams Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this);\n      }\n      if (!examData) {\n        return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 16\n        }, this);\n      }\n      const currentTopicQuestions = examData.topics[currentTopic] || [];\n      const currentQuestion = currentTopicQuestions[currentQuestionIndex] || {};\n      return /*#__PURE__*/_jsxDEV(Flex, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          flex: 1,\n          minWidth: \"0\",\n          children: /*#__PURE__*/_jsxDEV(QuestionPanel, {\n            width: \"100%\",\n            onSearch: handleSearch,\n            onShuffle: handleShuffle,\n            onReset: handleReset,\n            onSubmit: handleSubmit,\n            tabs: [\"ALL QUESTIONS\", \"FAVORITES\", \"ANSWERED\", \"UNANSWERED\", \"INCORRECT\"],\n            onTabChange: handleTabChange,\n            questionNumber: currentQuestionIndex + 1,\n            totalQuestions: currentTopicQuestions.length,\n            questionData: currentQuestion,\n            isStarFilled: isStarFilled,\n            toggleStar: toggleStar,\n            onNavigateLeft: () => handleQuestionChange(currentQuestionIndex - 1),\n            onNavigateRight: () => handleQuestionChange(currentQuestionIndex + 1),\n            currentTopic: currentTopic,\n            currentQuestion: `T${currentTopic} Q${currentQuestionIndex + 1}`,\n            onQuestionSelect: selectedQuestion => {\n              const [, questionPart] = selectedQuestion.split(\" \");\n              const newIndex = parseInt(questionPart.slice(1)) - 1;\n              handleQuestionChange(newIndex);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: \"300px\",\n          minWidth: \"300px\",\n          marginLeft: 8,\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 8,\n            children: [/*#__PURE__*/_jsxDEV(TopicBox, {\n              topicNumber: currentTopic,\n              examCode: examData.examCode,\n              examTitle: examData.examTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DownloadBox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TopicSelector, {\n              availableTopics: Object.keys(examData.topics).map(Number),\n              currentTopic: currentTopic,\n              onTopicChange: handleTopicChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: \"404 - Page not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      height: \"100vh\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        isCollapsed: isSidebarCollapsed,\n        onToggleCollapse: toggleSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        direction: \"column\",\n        flex: 1,\n        overflow: \"hidden\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          activeItem: activeItem,\n          children: location.pathname.startsWith(\"/actual-exam\") && examData && /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n            items: [{\n              label: \"All Providers\",\n              href: \"/providers\"\n            }, {\n              label: examData.provider,\n              href: \"/exams\"\n            }, {\n              label: examData.examTitle,\n              href: \"#\",\n              isCurrentPage: true\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          flex: 1,\n          overflow: \"auto\",\n          padding: 8,\n          children: /*#__PURE__*/_jsxDEV(Suspense, {\n            fallback: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 33\n            }, this),\n            children: renderContent()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"8Hn/ykiW2x1liVgCET3LLr9lN/0=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c16 = MainPage;\nexport default MainPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n$RefreshReg$(_c, \"ProviderExamsCard$lazy\");\n$RefreshReg$(_c2, \"ProviderExamsCard\");\n$RefreshReg$(_c3, \"ProvidersPage$lazy\");\n$RefreshReg$(_c4, \"ProvidersPage\");\n$RefreshReg$(_c5, \"QuestionPanel$lazy\");\n$RefreshReg$(_c6, \"QuestionPanel\");\n$RefreshReg$(_c7, \"DownloadBox$lazy\");\n$RefreshReg$(_c8, \"DownloadBox\");\n$RefreshReg$(_c9, \"TopicSelector$lazy\");\n$RefreshReg$(_c10, \"TopicSelector\");\n$RefreshReg$(_c11, \"Dashboard$lazy\");\n$RefreshReg$(_c12, \"Dashboard\");\n$RefreshReg$(_c13, \"TopicBox$lazy\");\n$RefreshReg$(_c14, \"TopicBox\");\n$RefreshReg$(_c15, \"LoadingSpinner\");\n$RefreshReg$(_c16, \"MainPage\");","map":{"version":3,"names":["React","useState","lazy","Suspense","useEffect","useParams","useNavigate","useLocation","ChakraProvider","extendTheme","Flex","Box","VStack","Spinner","Center","Text","Button","Sidebar","Navbar","Breadcrumbs","ComingSoonComponent","jsxDEV","_jsxDEV","ProviderExamsCard","_c","_c2","ProvidersPage","_c3","_c4","QuestionPanel","_c5","_c6","DownloadBox","_c7","_c8","TopicSelector","_c9","_c10","Dashboard","_c11","_c12","TopicBox","_c13","_c14","theme","fonts","body","components","variants","referral","height","fontSize","paddingLeft","paddingRight","borderRadius","border","fontWeight","textTransform","transition","boxShadow","_hover","transform","_active","borderRight","_first","borderTopLeftRadius","borderBottomLeftRadius","_last","borderTopRightRadius","borderBottomRightRadius","LoadingSpinner","position","top","left","right","bottom","backgroundColor","zIndex","children","size","color","thickness","fileName","_jsxFileName","lineNumber","columnNumber","_c15","MainPage","_s","isStarFilled","setIsStarFilled","currentTopic","setCurrentTopic","isSidebarCollapsed","setIsSidebarCollapsed","currentExam","setCurrentExam","examData","setExamData","currentQuestionIndex","setCurrentQuestionIndex","view","setView","examId","navigate","location","getActiveItem","path","startsWith","activeItem","pathname","fetchExamData","response","fetch","data","json","topics","Object","keys","map","Number","length","error","console","toggleStar","event","stopPropagation","toggleSidebar","handleExamSelect","handleTabChange","tab","log","handleSearch","searchTerm","handleShuffle","handleReset","handleSubmit","handleTopicChange","topic","handleQuestionChange","newIndex","currentTopicQuestions","handleViewChange","newView","renderContent","width","onExamSelect","onViewChange","spacing","colorScheme","onClick","currentQuestion","flex","minWidth","onSearch","onShuffle","onReset","onSubmit","tabs","onTabChange","questionNumber","totalQuestions","questionData","onNavigateLeft","onNavigateRight","onQuestionSelect","selectedQuestion","questionPart","split","parseInt","slice","marginLeft","topicNumber","examCode","examTitle","availableTopics","onTopicChange","isCollapsed","onToggleCollapse","direction","overflow","items","label","href","provider","isCurrentPage","padding","fallback","_c16","$RefreshReg$"],"sources":["/Users/reineirduran/demo-components/frontend/src/MainPage.js"],"sourcesContent":["import React, { useState, lazy, Suspense, useEffect } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport {\n  ChakraProvider,\n  extendTheme,\n  Flex,\n  Box,\n  VStack,\n  Spinner,\n  Center,\n  Text,\n  Button,\n} from \"@chakra-ui/react\";\nimport \"@fontsource-variable/karla/wght.css\";\nimport Sidebar from \"./components/Sidebar\";\nimport Navbar from \"./components/Navbar\";\nimport Breadcrumbs from \"./components/Breadcrumbs\";\nimport ComingSoonComponent from \"./components/ComingSoonComponent\";\n\nconst ProviderExamsCard = lazy(() => import(\"./components/ProviderExamsCard\"));\nconst ProvidersPage = lazy(() => import(\"./components/ProvidersPage\"));\nconst QuestionPanel = lazy(() => import(\"./components/QuestionPanel\"));\nconst DownloadBox = lazy(() => import(\"./components/DownloadBox\"));\nconst TopicSelector = lazy(() => import(\"./components/TopicSelector\"));\nconst Dashboard = lazy(() => import(\"./components/Dashboard\"));\nconst TopicBox = lazy(() => import(\"./components/TopicBox\"));\n\nconst theme = extendTheme({\n  fonts: {\n    body: '\"Karla Variable\", sans-serif',\n  },\n  components: {\n    Button: {\n      variants: {\n        referral: {\n          height: \"48px\",\n          fontSize: \"16px\",\n          paddingLeft: \"24px\",\n          paddingRight: \"24px\",\n          borderRadius: \"full\",\n          border: \"2px solid black\",\n          fontWeight: 700,\n          textTransform: \"uppercase\",\n          transition: \"0.3s\",\n          boxShadow: \"0 4px 0 0 black\",\n          _hover: {\n            transform: \"translateY(2px)\",\n            boxShadow: \"0 2px 0 0 black\",\n          },\n          _active: {\n            transform: \"translateY(4px)\",\n            boxShadow: \"none\",\n          },\n          borderRight: \"0\",\n          _first: {\n            borderTopLeftRadius: \"full\",\n            borderBottomLeftRadius: \"full\",\n          },\n          _last: {\n            borderRight: \"2px solid black\",\n            borderTopRightRadius: \"full\",\n            borderBottomRightRadius: \"full\",\n          },\n        },\n      },\n    },\n  },\n});\n\nconst LoadingSpinner = () => (\n  <Center\n    position=\"fixed\"\n    top=\"0\"\n    left=\"0\"\n    right=\"0\"\n    bottom=\"0\"\n    backgroundColor=\"rgba(255, 255, 255, 0.8)\"\n    zIndex=\"9999\"\n  >\n    <Spinner size=\"xl\" color=\"#00bfff\" thickness=\"4px\" />\n  </Center>\n);\n\nconst MainPage = () => {\n  const [isStarFilled, setIsStarFilled] = useState(false);\n  const [currentTopic, setCurrentTopic] = useState(1);\n  const [isSidebarCollapsed, setIsSidebarCollapsed] = useState(false);\n  const [currentExam, setCurrentExam] = useState(null);\n  const [examData, setExamData] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [view, setView] = useState(\"grid\");\n  const { examId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const getActiveItem = (path) => {\n    if (path === \"/\") return \"Dashboard\";\n    if (path.startsWith(\"/providers\")) return \"Providers\";\n    if (path.startsWith(\"/exams\")) return \"Exams\";\n    if (path.startsWith(\"/custom-exam\")) return \"Custom Exam\";\n    if (path.startsWith(\"/actual-exam\")) return \"Actual Exam\";\n    return \"\";\n  };\n\n  const activeItem = getActiveItem(location.pathname);\n\n  useEffect(() => {\n    if (location.pathname === \"/actual-exam\" && !examId) {\n      navigate(\"/exams\");\n    }\n  }, [location, navigate, examId]);\n\n  useEffect(() => {\n    if (examId) {\n      setCurrentExam(examId);\n    }\n  }, [examId]);\n\n  useEffect(() => {\n    if (currentExam) {\n      const fetchExamData = async () => {\n        try {\n          setExamData(null);\n          const response = await fetch(\n            `http://localhost:5000/api/exams/${currentExam}`\n          );\n          const data = await response.json();\n          setExamData(data);\n          const topics = Object.keys(data.topics).map(Number);\n          setCurrentTopic(\n            topics.length === 1 ? topics[0] : currentTopic || topics[0]\n          );\n          setCurrentQuestionIndex(0);\n        } catch (error) {\n          console.error(\"Error fetching exam data:\", error);\n        }\n      };\n\n      fetchExamData();\n    }\n  }, [currentExam, currentTopic]);\n\n  const toggleStar = (event) => {\n    event.stopPropagation();\n    setIsStarFilled(!isStarFilled);\n  };\n\n  const toggleSidebar = () => {\n    setIsSidebarCollapsed(!isSidebarCollapsed);\n  };\n\n  const handleExamSelect = (examId) => {\n    navigate(`/actual-exam/${examId}`);\n  };\n\n  const handleTabChange = (tab) => {\n    console.log(`Tab changed to: ${tab}`);\n  };\n\n  const handleSearch = (searchTerm) => {\n    console.log(\"Searching for:\", searchTerm);\n  };\n\n  const handleShuffle = () => {\n    console.log(\"Shuffling questions\");\n  };\n\n  const handleReset = () => {\n    console.log(\"Resetting questions\");\n  };\n\n  const handleSubmit = () => {\n    console.log(\"Submitting answer\");\n  };\n\n  const handleTopicChange = (topic) => {\n    setCurrentTopic(topic);\n    setCurrentQuestionIndex(0);\n  };\n\n  const handleQuestionChange = (newIndex) => {\n    const currentTopicQuestions = examData.topics[currentTopic] || [];\n    if (newIndex >= 0 && newIndex < currentTopicQuestions.length) {\n      setCurrentQuestionIndex(newIndex);\n    }\n  };\n\n  const handleViewChange = (newView) => {\n    setView(newView);\n  };\n\n  const renderContent = () => {\n    const path = location.pathname;\n\n    if (path === \"/\") {\n      return (\n        <Box width=\"100%\">\n          <Dashboard />\n        </Box>\n      );\n    } else if (path === \"/providers\") {\n      return (\n        <Box width=\"100%\">\n          <ProvidersPage />\n        </Box>\n      );\n    } else if (path === \"/exams\") {\n      return (\n        <Box width=\"100%\">\n          <ProviderExamsCard\n            onExamSelect={handleExamSelect}\n            view={view}\n            onViewChange={handleViewChange}\n          />\n        </Box>\n      );\n    } else if (path === \"/custom-exam\") {\n      return (\n        <Box width=\"100%\">\n          <ComingSoonComponent />\n        </Box>\n      );\n    } else if (path.startsWith(\"/actual-exam\")) {\n      if (path === \"/actual-exam\") {\n        return (\n          <Center height=\"100%\">\n            <VStack spacing={4}>\n              <Text fontSize=\"xl\">Please select an exam first.</Text>\n              <Button colorScheme=\"blue\" onClick={() => navigate(\"/exams\")}>\n                Go to Exams Page\n              </Button>\n            </VStack>\n          </Center>\n        );\n      }\n      if (!examData) {\n        return <LoadingSpinner />;\n      }\n      const currentTopicQuestions = examData.topics[currentTopic] || [];\n      const currentQuestion =\n        currentTopicQuestions[currentQuestionIndex] || {};\n      return (\n        <Flex>\n          <Box flex={1} minWidth=\"0\">\n            <QuestionPanel\n              width=\"100%\"\n              onSearch={handleSearch}\n              onShuffle={handleShuffle}\n              onReset={handleReset}\n              onSubmit={handleSubmit}\n              tabs={[\n                \"ALL QUESTIONS\",\n                \"FAVORITES\",\n                \"ANSWERED\",\n                \"UNANSWERED\",\n                \"INCORRECT\",\n              ]}\n              onTabChange={handleTabChange}\n              questionNumber={currentQuestionIndex + 1}\n              totalQuestions={currentTopicQuestions.length}\n              questionData={currentQuestion}\n              isStarFilled={isStarFilled}\n              toggleStar={toggleStar}\n              onNavigateLeft={() =>\n                handleQuestionChange(currentQuestionIndex - 1)\n              }\n              onNavigateRight={() =>\n                handleQuestionChange(currentQuestionIndex + 1)\n              }\n              currentTopic={currentTopic}\n              currentQuestion={`T${currentTopic} Q${currentQuestionIndex + 1}`}\n              onQuestionSelect={(selectedQuestion) => {\n                const [, questionPart] = selectedQuestion.split(\" \");\n                const newIndex = parseInt(questionPart.slice(1)) - 1;\n                handleQuestionChange(newIndex);\n              }}\n            />\n          </Box>\n          <Box width=\"300px\" minWidth=\"300px\" marginLeft={8}>\n            <VStack spacing={8}>\n              <TopicBox\n                topicNumber={currentTopic}\n                examCode={examData.examCode}\n                examTitle={examData.examTitle}\n              />\n              <DownloadBox />\n              <TopicSelector\n                availableTopics={Object.keys(examData.topics).map(Number)}\n                currentTopic={currentTopic}\n                onTopicChange={handleTopicChange}\n              />\n            </VStack>\n          </Box>\n        </Flex>\n      );\n    } else {\n      return <Box>404 - Page not found</Box>;\n    }\n  };\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Flex height=\"100vh\">\n        <Sidebar\n          isCollapsed={isSidebarCollapsed}\n          onToggleCollapse={toggleSidebar}\n        />\n        <Flex direction=\"column\" flex={1} overflow=\"hidden\">\n          <Navbar activeItem={activeItem}>\n            {location.pathname.startsWith(\"/actual-exam\") && examData && (\n              <Breadcrumbs\n                items={[\n                  { label: \"All Providers\", href: \"/providers\" },\n                  { label: examData.provider, href: \"/exams\" },\n                  {\n                    label: examData.examTitle,\n                    href: \"#\",\n                    isCurrentPage: true,\n                  },\n                ]}\n              />\n            )}\n          </Navbar>\n          <Box flex={1} overflow=\"auto\" padding={8}>\n            <Suspense fallback={<LoadingSpinner />}>{renderContent()}</Suspense>\n          </Box>\n        </Flex>\n      </Flex>\n    </ChakraProvider>\n  );\n};\n\nexport default MainPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}