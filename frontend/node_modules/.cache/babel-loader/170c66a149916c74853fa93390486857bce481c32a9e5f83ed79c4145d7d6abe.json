{"ast":null,"code":"'use client';\n\nimport { useCallbackRef, useCounter, useUpdateEffect, useSafeLayoutEffect, useEventListener, mergeRefs } from '@chakra-ui/hooks';\nimport { callAllHandlers, ariaAttr } from '@chakra-ui/utils';\nimport { useState, useRef, useCallback, useMemo } from 'react';\nimport { useAttributeObserver } from './use-attr-observer.mjs';\nimport { useSpinner } from './use-spinner.mjs';\nconst FLOATING_POINT_REGEX = /^[Ee0-9+\\-.]$/;\nfunction isFloatingPointNumericCharacter(character) {\n  return FLOATING_POINT_REGEX.test(character);\n}\nfunction isValidNumericKeyboardEvent(event, isValid) {\n  if (event.key == null) return true;\n  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n  const isSingleCharacterKey = event.key.length === 1;\n  if (!isSingleCharacterKey || isModifierKey) return true;\n  return isValid(event.key);\n}\nfunction useNumberInput(props = {}) {\n  const {\n    focusInputOnChange = true,\n    clampValueOnBlur = true,\n    keepWithinRange = true,\n    min = Number.MIN_SAFE_INTEGER,\n    max = Number.MAX_SAFE_INTEGER,\n    step: stepProp = 1,\n    isReadOnly,\n    isDisabled,\n    isRequired,\n    isInvalid,\n    pattern = \"[0-9]*(.[0-9]+)?\",\n    inputMode = \"decimal\",\n    allowMouseWheel,\n    id,\n    onChange: _,\n    precision,\n    name,\n    \"aria-describedby\": ariaDescBy,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onInvalid: onInvalidProp,\n    getAriaValueText: getAriaValueTextProp,\n    isValidCharacter: isValidCharacterProp,\n    format: formatValue,\n    parse: parseValue,\n    ...htmlProps\n  } = props;\n  const onFocus = useCallbackRef(onFocusProp);\n  const onBlur = useCallbackRef(onBlurProp);\n  const onInvalid = useCallbackRef(onInvalidProp);\n  const isValidCharacter = useCallbackRef(isValidCharacterProp ?? isFloatingPointNumericCharacter);\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  const counter = useCounter(props);\n  const {\n    update: updateFn,\n    increment: incrementFn,\n    decrement: decrementFn\n  } = counter;\n  const [isFocused, setFocused] = useState(false);\n  const isInteractive = !(isReadOnly || isDisabled);\n  const inputRef = useRef(null);\n  const inputSelectionRef = useRef(null);\n  const incrementButtonRef = useRef(null);\n  const decrementButtonRef = useRef(null);\n  const sanitize = useCallback(value => value.split(\"\").filter(isValidCharacter).join(\"\"), [isValidCharacter]);\n  const parse = useCallback(value => parseValue?.(value) ?? value, [parseValue]);\n  const format = useCallback(value => (formatValue?.(value) ?? value).toString(), [formatValue]);\n  useUpdateEffect(() => {\n    if (counter.valueAsNumber > max) {\n      onInvalid?.(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    } else if (counter.valueAsNumber < min) {\n      onInvalid?.(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    }\n  }, [counter.valueAsNumber, counter.value, format, onInvalid]);\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current) return;\n    const notInSync = inputRef.current.value != counter.value;\n    if (notInSync) {\n      const parsedInput = parse(inputRef.current.value);\n      counter.setValue(sanitize(parsedInput));\n    }\n  }, [parse, sanitize]);\n  const increment = useCallback((step = stepProp) => {\n    if (isInteractive) {\n      incrementFn(step);\n    }\n  }, [incrementFn, isInteractive, stepProp]);\n  const decrement = useCallback((step = stepProp) => {\n    if (isInteractive) {\n      decrementFn(step);\n    }\n  }, [decrementFn, isInteractive, stepProp]);\n  const spinner = useSpinner(increment, decrement);\n  useAttributeObserver(incrementButtonRef, \"disabled\", spinner.stop, spinner.isSpinning);\n  useAttributeObserver(decrementButtonRef, \"disabled\", spinner.stop, spinner.isSpinning);\n  const onChange = useCallback(event => {\n    const evt = event.nativeEvent;\n    if (evt.isComposing) return;\n    const parsedInput = parse(event.currentTarget.value);\n    updateFn(sanitize(parsedInput));\n    inputSelectionRef.current = {\n      start: event.currentTarget.selectionStart,\n      end: event.currentTarget.selectionEnd\n    };\n  }, [updateFn, sanitize, parse]);\n  const _onFocus = useCallback(event => {\n    onFocus?.(event);\n    if (!inputSelectionRef.current) return;\n    event.currentTarget.selectionStart = inputSelectionRef.current.start ?? event.currentTarget.value?.length;\n    event.currentTarget.selectionEnd = inputSelectionRef.current.end ?? event.currentTarget.selectionStart;\n  }, [onFocus]);\n  const onKeyDown = useCallback(event => {\n    if (event.nativeEvent.isComposing) return;\n    if (!isValidNumericKeyboardEvent(event, isValidCharacter)) {\n      event.preventDefault();\n    }\n    const stepFactor = getStepFactor(event) * stepProp;\n    const eventKey = event.key;\n    const keyMap = {\n      ArrowUp: () => increment(stepFactor),\n      ArrowDown: () => decrement(stepFactor),\n      Home: () => updateFn(min),\n      End: () => updateFn(max)\n    };\n    const action = keyMap[eventKey];\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [isValidCharacter, stepProp, increment, decrement, updateFn, min, max]);\n  const getStepFactor = event => {\n    let ratio = 1;\n    if (event.metaKey || event.ctrlKey) {\n      ratio = 0.1;\n    }\n    if (event.shiftKey) {\n      ratio = 10;\n    }\n    return ratio;\n  };\n  const ariaValueText = useMemo(() => {\n    const text = getAriaValueText?.(counter.value);\n    if (text != null) return text;\n    const defaultText = counter.value.toString();\n    return !defaultText ? void 0 : defaultText;\n  }, [counter.value, getAriaValueText]);\n  const validateAndClamp = useCallback(() => {\n    let next = counter.value;\n    if (counter.value === \"\") return;\n    const valueStartsWithE = /^[eE]/.test(counter.value.toString());\n    if (valueStartsWithE) {\n      counter.setValue(\"\");\n    } else {\n      if (counter.valueAsNumber < min) {\n        next = min;\n      }\n      if (counter.valueAsNumber > max) {\n        next = max;\n      }\n      counter.cast(next);\n    }\n  }, [counter, max, min]);\n  const onInputBlur = useCallback(() => {\n    setFocused(false);\n    if (clampValueOnBlur) {\n      validateAndClamp();\n    }\n  }, [clampValueOnBlur, setFocused, validateAndClamp]);\n  const focusInput = useCallback(() => {\n    if (focusInputOnChange) {\n      requestAnimationFrame(() => {\n        inputRef.current?.focus();\n      });\n    }\n  }, [focusInputOnChange]);\n  const spinUp = useCallback(event => {\n    event.preventDefault();\n    spinner.up();\n    focusInput();\n  }, [focusInput, spinner]);\n  const spinDown = useCallback(event => {\n    event.preventDefault();\n    spinner.down();\n    focusInput();\n  }, [focusInput, spinner]);\n  useEventListener(() => inputRef.current, \"wheel\", event => {\n    const doc = inputRef.current?.ownerDocument ?? document;\n    const isInputFocused = doc.activeElement === inputRef.current;\n    if (!allowMouseWheel || !isInputFocused) return;\n    event.preventDefault();\n    const stepFactor = getStepFactor(event) * stepProp;\n    const direction = Math.sign(event.deltaY);\n    if (direction === -1) {\n      increment(stepFactor);\n    } else if (direction === 1) {\n      decrement(stepFactor);\n    }\n  }, {\n    passive: false\n  });\n  const getIncrementButtonProps = useCallback((props2 = {}, ref = null) => {\n    const disabled = isDisabled || keepWithinRange && counter.isAtMax;\n    return {\n      ...props2,\n      ref: mergeRefs(ref, incrementButtonRef),\n      role: \"button\",\n      tabIndex: -1,\n      onPointerDown: callAllHandlers(props2.onPointerDown, event => {\n        if (event.button !== 0 || disabled) return;\n        spinUp(event);\n      }),\n      onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n      onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n      disabled,\n      \"aria-disabled\": ariaAttr(disabled)\n    };\n  }, [counter.isAtMax, keepWithinRange, spinUp, spinner.stop, isDisabled]);\n  const getDecrementButtonProps = useCallback((props2 = {}, ref = null) => {\n    const disabled = isDisabled || keepWithinRange && counter.isAtMin;\n    return {\n      ...props2,\n      ref: mergeRefs(ref, decrementButtonRef),\n      role: \"button\",\n      tabIndex: -1,\n      onPointerDown: callAllHandlers(props2.onPointerDown, event => {\n        if (event.button !== 0 || disabled) return;\n        spinDown(event);\n      }),\n      onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n      onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n      disabled,\n      \"aria-disabled\": ariaAttr(disabled)\n    };\n  }, [counter.isAtMin, keepWithinRange, spinDown, spinner.stop, isDisabled]);\n  const getInputProps = useCallback((props2 = {}, ref = null) => ({\n    name,\n    inputMode,\n    type: \"text\",\n    pattern,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-label\": ariaLabel,\n    \"aria-describedby\": ariaDescBy,\n    id,\n    disabled: isDisabled,\n    ...props2,\n    readOnly: props2.readOnly ?? isReadOnly,\n    \"aria-readonly\": props2.readOnly ?? isReadOnly,\n    \"aria-required\": props2.required ?? isRequired,\n    required: props2.required ?? isRequired,\n    ref: mergeRefs(inputRef, ref),\n    value: format(counter.value),\n    role: \"spinbutton\",\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": Number.isNaN(counter.valueAsNumber) ? void 0 : counter.valueAsNumber,\n    \"aria-invalid\": ariaAttr(isInvalid ?? counter.isOutOfRange),\n    \"aria-valuetext\": ariaValueText,\n    autoComplete: \"off\",\n    autoCorrect: \"off\",\n    onChange: callAllHandlers(props2.onChange, onChange),\n    onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n    onFocus: callAllHandlers(props2.onFocus, _onFocus, () => setFocused(true)),\n    onBlur: callAllHandlers(props2.onBlur, onBlur, onInputBlur)\n  }), [name, inputMode, pattern, ariaLabelledBy, ariaLabel, format, ariaDescBy, id, isDisabled, isRequired, isReadOnly, isInvalid, counter.value, counter.valueAsNumber, counter.isOutOfRange, min, max, ariaValueText, onChange, onKeyDown, _onFocus, onBlur, onInputBlur]);\n  return {\n    value: format(counter.value),\n    valueAsNumber: counter.valueAsNumber,\n    isFocused,\n    isDisabled,\n    isReadOnly,\n    getIncrementButtonProps,\n    getDecrementButtonProps,\n    getInputProps,\n    htmlProps\n  };\n}\nexport { useNumberInput };","map":{"version":3,"names":["useCallbackRef","useCounter","useUpdateEffect","useSafeLayoutEffect","useEventListener","mergeRefs","callAllHandlers","ariaAttr","useState","useRef","useCallback","useMemo","useAttributeObserver","useSpinner","FLOATING_POINT_REGEX","isFloatingPointNumericCharacter","character","test","isValidNumericKeyboardEvent","event","isValid","key","isModifierKey","ctrlKey","altKey","metaKey","isSingleCharacterKey","length","useNumberInput","props","focusInputOnChange","clampValueOnBlur","keepWithinRange","min","Number","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","step","stepProp","isReadOnly","isDisabled","isRequired","isInvalid","pattern","inputMode","allowMouseWheel","id","onChange","_","precision","name","ariaDescBy","ariaLabel","ariaLabelledBy","onFocus","onFocusProp","onBlur","onBlurProp","onInvalid","onInvalidProp","getAriaValueText","getAriaValueTextProp","isValidCharacter","isValidCharacterProp","format","formatValue","parse","parseValue","htmlProps","counter","update","updateFn","increment","incrementFn","decrement","decrementFn","isFocused","setFocused","isInteractive","inputRef","inputSelectionRef","incrementButtonRef","decrementButtonRef","sanitize","value","split","filter","join","toString","valueAsNumber","current","notInSync","parsedInput","setValue","spinner","stop","isSpinning","evt","nativeEvent","isComposing","currentTarget","start","selectionStart","end","selectionEnd","_onFocus","onKeyDown","preventDefault","stepFactor","getStepFactor","eventKey","keyMap","ArrowUp","ArrowDown","Home","End","action","ratio","shiftKey","ariaValueText","text","defaultText","validateAndClamp","next","valueStartsWithE","cast","onInputBlur","focusInput","requestAnimationFrame","focus","spinUp","up","spinDown","down","doc","ownerDocument","document","isInputFocused","activeElement","direction","Math","sign","deltaY","passive","getIncrementButtonProps","props2","ref","disabled","isAtMax","role","tabIndex","onPointerDown","button","onPointerLeave","onPointerUp","getDecrementButtonProps","isAtMin","getInputProps","type","readOnly","required","isNaN","isOutOfRange","autoComplete","autoCorrect"],"sources":["/Users/reineirduran/demo-components/frontend/node_modules/@chakra-ui/react/dist/esm/number-input/use-number-input.mjs"],"sourcesContent":["'use client';\nimport { useCallbackRef, useCounter, useUpdateEffect, useSafeLayoutEffect, useEventListener, mergeRefs } from '@chakra-ui/hooks';\nimport { callAllHandlers, ariaAttr } from '@chakra-ui/utils';\nimport { useState, useRef, useCallback, useMemo } from 'react';\nimport { useAttributeObserver } from './use-attr-observer.mjs';\nimport { useSpinner } from './use-spinner.mjs';\n\nconst FLOATING_POINT_REGEX = /^[Ee0-9+\\-.]$/;\nfunction isFloatingPointNumericCharacter(character) {\n  return FLOATING_POINT_REGEX.test(character);\n}\nfunction isValidNumericKeyboardEvent(event, isValid) {\n  if (event.key == null)\n    return true;\n  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n  const isSingleCharacterKey = event.key.length === 1;\n  if (!isSingleCharacterKey || isModifierKey)\n    return true;\n  return isValid(event.key);\n}\nfunction useNumberInput(props = {}) {\n  const {\n    focusInputOnChange = true,\n    clampValueOnBlur = true,\n    keepWithinRange = true,\n    min = Number.MIN_SAFE_INTEGER,\n    max = Number.MAX_SAFE_INTEGER,\n    step: stepProp = 1,\n    isReadOnly,\n    isDisabled,\n    isRequired,\n    isInvalid,\n    pattern = \"[0-9]*(.[0-9]+)?\",\n    inputMode = \"decimal\",\n    allowMouseWheel,\n    id,\n    onChange: _,\n    precision,\n    name,\n    \"aria-describedby\": ariaDescBy,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onInvalid: onInvalidProp,\n    getAriaValueText: getAriaValueTextProp,\n    isValidCharacter: isValidCharacterProp,\n    format: formatValue,\n    parse: parseValue,\n    ...htmlProps\n  } = props;\n  const onFocus = useCallbackRef(onFocusProp);\n  const onBlur = useCallbackRef(onBlurProp);\n  const onInvalid = useCallbackRef(onInvalidProp);\n  const isValidCharacter = useCallbackRef(\n    isValidCharacterProp ?? isFloatingPointNumericCharacter\n  );\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  const counter = useCounter(props);\n  const {\n    update: updateFn,\n    increment: incrementFn,\n    decrement: decrementFn\n  } = counter;\n  const [isFocused, setFocused] = useState(false);\n  const isInteractive = !(isReadOnly || isDisabled);\n  const inputRef = useRef(null);\n  const inputSelectionRef = useRef(null);\n  const incrementButtonRef = useRef(null);\n  const decrementButtonRef = useRef(null);\n  const sanitize = useCallback(\n    (value) => value.split(\"\").filter(isValidCharacter).join(\"\"),\n    [isValidCharacter]\n  );\n  const parse = useCallback(\n    (value) => parseValue?.(value) ?? value,\n    [parseValue]\n  );\n  const format = useCallback(\n    (value) => (formatValue?.(value) ?? value).toString(),\n    [formatValue]\n  );\n  useUpdateEffect(() => {\n    if (counter.valueAsNumber > max) {\n      onInvalid?.(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    } else if (counter.valueAsNumber < min) {\n      onInvalid?.(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    }\n  }, [counter.valueAsNumber, counter.value, format, onInvalid]);\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current)\n      return;\n    const notInSync = inputRef.current.value != counter.value;\n    if (notInSync) {\n      const parsedInput = parse(inputRef.current.value);\n      counter.setValue(sanitize(parsedInput));\n    }\n  }, [parse, sanitize]);\n  const increment = useCallback(\n    (step = stepProp) => {\n      if (isInteractive) {\n        incrementFn(step);\n      }\n    },\n    [incrementFn, isInteractive, stepProp]\n  );\n  const decrement = useCallback(\n    (step = stepProp) => {\n      if (isInteractive) {\n        decrementFn(step);\n      }\n    },\n    [decrementFn, isInteractive, stepProp]\n  );\n  const spinner = useSpinner(increment, decrement);\n  useAttributeObserver(\n    incrementButtonRef,\n    \"disabled\",\n    spinner.stop,\n    spinner.isSpinning\n  );\n  useAttributeObserver(\n    decrementButtonRef,\n    \"disabled\",\n    spinner.stop,\n    spinner.isSpinning\n  );\n  const onChange = useCallback(\n    (event) => {\n      const evt = event.nativeEvent;\n      if (evt.isComposing)\n        return;\n      const parsedInput = parse(event.currentTarget.value);\n      updateFn(sanitize(parsedInput));\n      inputSelectionRef.current = {\n        start: event.currentTarget.selectionStart,\n        end: event.currentTarget.selectionEnd\n      };\n    },\n    [updateFn, sanitize, parse]\n  );\n  const _onFocus = useCallback(\n    (event) => {\n      onFocus?.(event);\n      if (!inputSelectionRef.current)\n        return;\n      event.currentTarget.selectionStart = inputSelectionRef.current.start ?? event.currentTarget.value?.length;\n      event.currentTarget.selectionEnd = inputSelectionRef.current.end ?? event.currentTarget.selectionStart;\n    },\n    [onFocus]\n  );\n  const onKeyDown = useCallback(\n    (event) => {\n      if (event.nativeEvent.isComposing)\n        return;\n      if (!isValidNumericKeyboardEvent(event, isValidCharacter)) {\n        event.preventDefault();\n      }\n      const stepFactor = getStepFactor(event) * stepProp;\n      const eventKey = event.key;\n      const keyMap = {\n        ArrowUp: () => increment(stepFactor),\n        ArrowDown: () => decrement(stepFactor),\n        Home: () => updateFn(min),\n        End: () => updateFn(max)\n      };\n      const action = keyMap[eventKey];\n      if (action) {\n        event.preventDefault();\n        action(event);\n      }\n    },\n    [isValidCharacter, stepProp, increment, decrement, updateFn, min, max]\n  );\n  const getStepFactor = (event) => {\n    let ratio = 1;\n    if (event.metaKey || event.ctrlKey) {\n      ratio = 0.1;\n    }\n    if (event.shiftKey) {\n      ratio = 10;\n    }\n    return ratio;\n  };\n  const ariaValueText = useMemo(() => {\n    const text = getAriaValueText?.(counter.value);\n    if (text != null)\n      return text;\n    const defaultText = counter.value.toString();\n    return !defaultText ? void 0 : defaultText;\n  }, [counter.value, getAriaValueText]);\n  const validateAndClamp = useCallback(() => {\n    let next = counter.value;\n    if (counter.value === \"\")\n      return;\n    const valueStartsWithE = /^[eE]/.test(counter.value.toString());\n    if (valueStartsWithE) {\n      counter.setValue(\"\");\n    } else {\n      if (counter.valueAsNumber < min) {\n        next = min;\n      }\n      if (counter.valueAsNumber > max) {\n        next = max;\n      }\n      counter.cast(next);\n    }\n  }, [counter, max, min]);\n  const onInputBlur = useCallback(() => {\n    setFocused(false);\n    if (clampValueOnBlur) {\n      validateAndClamp();\n    }\n  }, [clampValueOnBlur, setFocused, validateAndClamp]);\n  const focusInput = useCallback(() => {\n    if (focusInputOnChange) {\n      requestAnimationFrame(() => {\n        inputRef.current?.focus();\n      });\n    }\n  }, [focusInputOnChange]);\n  const spinUp = useCallback(\n    (event) => {\n      event.preventDefault();\n      spinner.up();\n      focusInput();\n    },\n    [focusInput, spinner]\n  );\n  const spinDown = useCallback(\n    (event) => {\n      event.preventDefault();\n      spinner.down();\n      focusInput();\n    },\n    [focusInput, spinner]\n  );\n  useEventListener(\n    () => inputRef.current,\n    \"wheel\",\n    (event) => {\n      const doc = inputRef.current?.ownerDocument ?? document;\n      const isInputFocused = doc.activeElement === inputRef.current;\n      if (!allowMouseWheel || !isInputFocused)\n        return;\n      event.preventDefault();\n      const stepFactor = getStepFactor(event) * stepProp;\n      const direction = Math.sign(event.deltaY);\n      if (direction === -1) {\n        increment(stepFactor);\n      } else if (direction === 1) {\n        decrement(stepFactor);\n      }\n    },\n    { passive: false }\n  );\n  const getIncrementButtonProps = useCallback(\n    (props2 = {}, ref = null) => {\n      const disabled = isDisabled || keepWithinRange && counter.isAtMax;\n      return {\n        ...props2,\n        ref: mergeRefs(ref, incrementButtonRef),\n        role: \"button\",\n        tabIndex: -1,\n        onPointerDown: callAllHandlers(props2.onPointerDown, (event) => {\n          if (event.button !== 0 || disabled)\n            return;\n          spinUp(event);\n        }),\n        onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n        onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n        disabled,\n        \"aria-disabled\": ariaAttr(disabled)\n      };\n    },\n    [counter.isAtMax, keepWithinRange, spinUp, spinner.stop, isDisabled]\n  );\n  const getDecrementButtonProps = useCallback(\n    (props2 = {}, ref = null) => {\n      const disabled = isDisabled || keepWithinRange && counter.isAtMin;\n      return {\n        ...props2,\n        ref: mergeRefs(ref, decrementButtonRef),\n        role: \"button\",\n        tabIndex: -1,\n        onPointerDown: callAllHandlers(props2.onPointerDown, (event) => {\n          if (event.button !== 0 || disabled)\n            return;\n          spinDown(event);\n        }),\n        onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n        onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n        disabled,\n        \"aria-disabled\": ariaAttr(disabled)\n      };\n    },\n    [counter.isAtMin, keepWithinRange, spinDown, spinner.stop, isDisabled]\n  );\n  const getInputProps = useCallback(\n    (props2 = {}, ref = null) => ({\n      name,\n      inputMode,\n      type: \"text\",\n      pattern,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-label\": ariaLabel,\n      \"aria-describedby\": ariaDescBy,\n      id,\n      disabled: isDisabled,\n      ...props2,\n      readOnly: props2.readOnly ?? isReadOnly,\n      \"aria-readonly\": props2.readOnly ?? isReadOnly,\n      \"aria-required\": props2.required ?? isRequired,\n      required: props2.required ?? isRequired,\n      ref: mergeRefs(inputRef, ref),\n      value: format(counter.value),\n      role: \"spinbutton\",\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": Number.isNaN(counter.valueAsNumber) ? void 0 : counter.valueAsNumber,\n      \"aria-invalid\": ariaAttr(isInvalid ?? counter.isOutOfRange),\n      \"aria-valuetext\": ariaValueText,\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      onChange: callAllHandlers(props2.onChange, onChange),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(\n        props2.onFocus,\n        _onFocus,\n        () => setFocused(true)\n      ),\n      onBlur: callAllHandlers(props2.onBlur, onBlur, onInputBlur)\n    }),\n    [\n      name,\n      inputMode,\n      pattern,\n      ariaLabelledBy,\n      ariaLabel,\n      format,\n      ariaDescBy,\n      id,\n      isDisabled,\n      isRequired,\n      isReadOnly,\n      isInvalid,\n      counter.value,\n      counter.valueAsNumber,\n      counter.isOutOfRange,\n      min,\n      max,\n      ariaValueText,\n      onChange,\n      onKeyDown,\n      _onFocus,\n      onBlur,\n      onInputBlur\n    ]\n  );\n  return {\n    value: format(counter.value),\n    valueAsNumber: counter.valueAsNumber,\n    isFocused,\n    isDisabled,\n    isReadOnly,\n    getIncrementButtonProps,\n    getDecrementButtonProps,\n    getInputProps,\n    htmlProps\n  };\n}\n\nexport { useNumberInput };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}