{"ast":null,"code":"var _jsxFileName = \"/Users/reineirduran/demo-components/src/components/CategoriesDropdown.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useMemo } from 'react';\nimport { Box, Text, Button, Tooltip } from '@chakra-ui/react';\nimport { ChevronDownIcon, ChevronUpIcon } from '@chakra-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryItem = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(({\n  category,\n  isSelected,\n  onClick\n}) => {\n  _s();\n  const itemRef = useRef(null);\n  const [isItemTruncated, setIsItemTruncated] = useState(false);\n  useEffect(() => {\n    if (itemRef.current) {\n      setIsItemTruncated(itemRef.current.scrollWidth > itemRef.current.clientWidth);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    label: category,\n    isDisabled: !isItemTruncated,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      padding: 3,\n      cursor: \"pointer\",\n      backgroundColor: isSelected ? \"#00bfff\" : \"white\",\n      _hover: {\n        backgroundColor: isSelected ? \"#00bfff\" : \"#b3ebf2\"\n      },\n      onClick: onClick,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        ref: itemRef,\n        fontWeight: 700,\n        fontSize: \"16px\",\n        lineHeight: \"19px\",\n        color: \"black\",\n        isTruncated: true,\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}, \"yKOqCrLYxiJfgOG77N92hIKwu5M=\")), \"yKOqCrLYxiJfgOG77N92hIKwu5M=\");\n_c2 = CategoryItem;\nconst CategoriesDropdown = ({\n  categories,\n  selectedCategory,\n  onSelect\n}) => {\n  _s2();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isTruncated, setIsTruncated] = useState(false);\n  const textRef = useRef(null);\n  useEffect(() => {\n    if (textRef.current) {\n      setIsTruncated(textRef.current.scrollWidth > textRef.current.clientWidth);\n    }\n  }, [selectedCategory]);\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleSelect = category => {\n    onSelect(category);\n    setIsOpen(false);\n  };\n  const sortedCategories = useMemo(() => {\n    const otherCertifications = categories.find(cat => cat === \"Other Certifications\");\n    const filteredCategories = categories.filter(cat => cat !== \"Other Certifications\");\n    const sortedFiltered = filteredCategories.sort((a, b) => a.localeCompare(b));\n    return [\"All Categories\", ...sortedFiltered, otherCertifications].filter(Boolean);\n  }, [categories]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    width: \"100%\",\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      label: selectedCategory,\n      isDisabled: !isTruncated,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleDropdown,\n        width: \"100%\",\n        backgroundColor: \"white\",\n        color: \"black\",\n        fontWeight: 700,\n        fontSize: \"16px\",\n        lineHeight: \"19px\",\n        borderRadius: \"10px\",\n        border: \"1px solid black\",\n        boxShadow: \"none\",\n        _hover: {\n          backgroundColor: \"#00bfff\",\n          boxShadow: \"0 3px 0 0 black\"\n        },\n        _active: {\n          backgroundColor: \"#00bfff\",\n          boxShadow: \"none\"\n        },\n        transition: \"all 0.2s\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        paddingLeft: 4,\n        paddingRight: 4,\n        paddingTop: 3,\n        paddingBottom: 3,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          ref: textRef,\n          isTruncated: true,\n          children: selectedCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), isOpen ? /*#__PURE__*/_jsxDEV(ChevronUpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Box, {\n      position: \"absolute\",\n      top: \"100%\",\n      left: 0,\n      width: \"100%\",\n      maxHeight: \"300px\",\n      backgroundColor: \"white\",\n      borderRadius: \"10px\",\n      border: \"1px solid black\",\n      marginTop: 2,\n      zIndex: 1,\n      overflowY: \"auto\",\n      children: sortedCategories.map((category, index) => /*#__PURE__*/_jsxDEV(CategoryItem, {\n        category: category,\n        isSelected: category === selectedCategory,\n        onClick: () => handleSelect(category)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s2(CategoriesDropdown, \"o+ZVcKspkJHqqQmGneLo94wqrOs=\");\n_c3 = CategoriesDropdown;\nexport default CategoriesDropdown;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CategoryItem$React.memo\");\n$RefreshReg$(_c2, \"CategoryItem\");\n$RefreshReg$(_c3, \"CategoriesDropdown\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useMemo","Box","Text","Button","Tooltip","ChevronDownIcon","ChevronUpIcon","jsxDEV","_jsxDEV","CategoryItem","_s","memo","_c","category","isSelected","onClick","itemRef","isItemTruncated","setIsItemTruncated","current","scrollWidth","clientWidth","label","isDisabled","children","padding","cursor","backgroundColor","_hover","ref","fontWeight","fontSize","lineHeight","color","isTruncated","fileName","_jsxFileName","lineNumber","columnNumber","_c2","CategoriesDropdown","categories","selectedCategory","onSelect","_s2","isOpen","setIsOpen","setIsTruncated","textRef","toggleDropdown","handleSelect","sortedCategories","otherCertifications","find","cat","filteredCategories","filter","sortedFiltered","sort","a","b","localeCompare","Boolean","position","width","borderRadius","border","boxShadow","_active","transition","display","justifyContent","alignItems","paddingLeft","paddingRight","paddingTop","paddingBottom","top","left","maxHeight","marginTop","zIndex","overflowY","map","index","_c3","$RefreshReg$"],"sources":["/Users/reineirduran/demo-components/src/components/CategoriesDropdown.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useMemo } from 'react';\nimport { Box, Text, Button, Tooltip } from '@chakra-ui/react';\nimport { ChevronDownIcon, ChevronUpIcon } from '@chakra-ui/icons';\n\nconst CategoryItem = React.memo(({ category, isSelected, onClick }) => {\n  const itemRef = useRef(null);\n  const [isItemTruncated, setIsItemTruncated] = useState(false);\n\n  useEffect(() => {\n    if (itemRef.current) {\n      setIsItemTruncated(itemRef.current.scrollWidth > itemRef.current.clientWidth);\n    }\n  }, []);\n\n  return (\n    <Tooltip label={category} isDisabled={!isItemTruncated}>\n      <Box\n        padding={3}\n        cursor=\"pointer\"\n        backgroundColor={isSelected ? \"#00bfff\" : \"white\"}\n        _hover={{\n          backgroundColor: isSelected ? \"#00bfff\" : \"#b3ebf2\",\n        }}\n        onClick={onClick}\n      >\n        <Text\n          ref={itemRef}\n          fontWeight={700}\n          fontSize=\"16px\"\n          lineHeight=\"19px\"\n          color=\"black\"\n          isTruncated\n        >\n          {category}\n        </Text>\n      </Box>\n    </Tooltip>\n  );\n});\n\nconst CategoriesDropdown = ({ categories, selectedCategory, onSelect }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isTruncated, setIsTruncated] = useState(false);\n  const textRef = useRef(null);\n\n  useEffect(() => {\n    if (textRef.current) {\n      setIsTruncated(textRef.current.scrollWidth > textRef.current.clientWidth);\n    }\n  }, [selectedCategory]);\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleSelect = (category) => {\n    onSelect(category);\n    setIsOpen(false);\n  };\n\n  const sortedCategories = useMemo(() => {\n    const otherCertifications = categories.find(cat => cat === \"Other Certifications\");\n    const filteredCategories = categories.filter(cat => cat !== \"Other Certifications\");\n    const sortedFiltered = filteredCategories.sort((a, b) => a.localeCompare(b));\n    return [\"All Categories\", ...sortedFiltered, otherCertifications].filter(Boolean);\n  }, [categories]);\n\n  return (\n    <Box position=\"relative\" width=\"100%\">\n      <Tooltip label={selectedCategory} isDisabled={!isTruncated}>\n        <Button\n          onClick={toggleDropdown}\n          width=\"100%\"\n          backgroundColor=\"white\"\n          color=\"black\"\n          fontWeight={700}\n          fontSize=\"16px\"\n          lineHeight=\"19px\"\n          borderRadius=\"10px\"\n          border=\"1px solid black\"\n          boxShadow=\"none\"\n          _hover={{\n            backgroundColor: \"#00bfff\",\n            boxShadow: \"0 3px 0 0 black\",\n          }}\n          _active={{\n            backgroundColor: \"#00bfff\",\n            boxShadow: \"none\",\n          }}\n          transition=\"all 0.2s\"\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          paddingLeft={4}\n          paddingRight={4}\n          paddingTop={3}\n          paddingBottom={3}\n        >\n          <Text ref={textRef} isTruncated>{selectedCategory}</Text>\n          {isOpen ? <ChevronUpIcon /> : <ChevronDownIcon />}\n        </Button>\n      </Tooltip>\n      {isOpen && (\n        <Box\n          position=\"absolute\"\n          top=\"100%\"\n          left={0}\n          width=\"100%\"\n          maxHeight=\"300px\"\n          backgroundColor=\"white\"\n          borderRadius=\"10px\"\n          border=\"1px solid black\"\n          marginTop={2}\n          zIndex={1}\n          overflowY=\"auto\"\n        >\n          {sortedCategories.map((category, index) => (\n            <CategoryItem\n              key={index}\n              category={category}\n              isSelected={category === selectedCategory}\n              onClick={() => handleSelect(category)}\n            />\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default CategoriesDropdown;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}