{"ast":null,"code":"'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport copy from 'copy-to-clipboard';\nfunction useClipboard(value, optionsOrTimeout = {}) {\n  const [hasCopied, setHasCopied] = useState(false);\n  const [valueState, setValueState] = useState(value);\n  useEffect(() => setValueState(value), [value]);\n  const {\n    timeout = 1500,\n    ...copyOptions\n  } = typeof optionsOrTimeout === \"number\" ? {\n    timeout: optionsOrTimeout\n  } : optionsOrTimeout;\n  const onCopy = useCallback(() => {\n    const didCopy = copy(valueState, copyOptions);\n    setHasCopied(didCopy);\n  }, [valueState, copyOptions]);\n  useEffect(() => {\n    let timeoutId = null;\n    if (hasCopied) {\n      timeoutId = window.setTimeout(() => {\n        setHasCopied(false);\n      }, timeout);\n    }\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [timeout, hasCopied]);\n  return {\n    value: valueState,\n    setValue: setValueState,\n    onCopy,\n    hasCopied\n  };\n}\nexport { useClipboard };","map":{"version":3,"names":["useState","useEffect","useCallback","copy","useClipboard","value","optionsOrTimeout","hasCopied","setHasCopied","valueState","setValueState","timeout","copyOptions","onCopy","didCopy","timeoutId","window","setTimeout","clearTimeout","setValue"],"sources":["/Users/reineirduran/demo-components/node_modules/@chakra-ui/hooks/dist/esm/use-clipboard.mjs"],"sourcesContent":["'use client';\nimport { useState, useEffect, useCallback } from 'react';\nimport copy from 'copy-to-clipboard';\n\nfunction useClipboard(value, optionsOrTimeout = {}) {\n  const [hasCopied, setHasCopied] = useState(false);\n  const [valueState, setValueState] = useState(value);\n  useEffect(() => setValueState(value), [value]);\n  const { timeout = 1500, ...copyOptions } = typeof optionsOrTimeout === \"number\" ? { timeout: optionsOrTimeout } : optionsOrTimeout;\n  const onCopy = useCallback(() => {\n    const didCopy = copy(valueState, copyOptions);\n    setHasCopied(didCopy);\n  }, [valueState, copyOptions]);\n  useEffect(() => {\n    let timeoutId = null;\n    if (hasCopied) {\n      timeoutId = window.setTimeout(() => {\n        setHasCopied(false);\n      }, timeout);\n    }\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [timeout, hasCopied]);\n  return {\n    value: valueState,\n    setValue: setValueState,\n    onCopy,\n    hasCopied\n  };\n}\n\nexport { useClipboard };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,OAAOC,IAAI,MAAM,mBAAmB;AAEpC,SAASC,YAAYA,CAACC,KAAK,EAAEC,gBAAgB,GAAG,CAAC,CAAC,EAAE;EAClD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAACK,KAAK,CAAC;EACnDJ,SAAS,CAAC,MAAMS,aAAa,CAACL,KAAK,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAC9C,MAAM;IAAEM,OAAO,GAAG,IAAI;IAAE,GAAGC;EAAY,CAAC,GAAG,OAAON,gBAAgB,KAAK,QAAQ,GAAG;IAAEK,OAAO,EAAEL;EAAiB,CAAC,GAAGA,gBAAgB;EAClI,MAAMO,MAAM,GAAGX,WAAW,CAAC,MAAM;IAC/B,MAAMY,OAAO,GAAGX,IAAI,CAACM,UAAU,EAAEG,WAAW,CAAC;IAC7CJ,YAAY,CAACM,OAAO,CAAC;EACvB,CAAC,EAAE,CAACL,UAAU,EAAEG,WAAW,CAAC,CAAC;EAC7BX,SAAS,CAAC,MAAM;IACd,IAAIc,SAAS,GAAG,IAAI;IACpB,IAAIR,SAAS,EAAE;MACbQ,SAAS,GAAGC,MAAM,CAACC,UAAU,CAAC,MAAM;QAClCT,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,EAAEG,OAAO,CAAC;IACb;IACA,OAAO,MAAM;MACX,IAAII,SAAS,EAAE;QACbC,MAAM,CAACE,YAAY,CAACH,SAAS,CAAC;MAChC;IACF,CAAC;EACH,CAAC,EAAE,CAACJ,OAAO,EAAEJ,SAAS,CAAC,CAAC;EACxB,OAAO;IACLF,KAAK,EAAEI,UAAU;IACjBU,QAAQ,EAAET,aAAa;IACvBG,MAAM;IACNN;EACF,CAAC;AACH;AAEA,SAASH,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}